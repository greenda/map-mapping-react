{"version":3,"sources":["assets/eurasia.png","assets/africa.png","assets/north_america.png","assets/south_america.png","assets/australia.png","assets/antarctica.png","assets/achievement_empty.svg","assets/map-mapping-logo.svg","assets/aircraft-icon__red.svg","constants/map-actions.js","constants/flight-status.js","helpers/FlightHelper.js","helpers/ScheduleHelper.js","selectors/index.js","helpers/BudgetHelper.js","constants/action-types.js","actions/pageActions.js","components/timeline/TimelineView.js","components/timeline/TimelineContainer.js","constants/item-types.js","common/custom-hooks/toogle-open.js","components/flightList/flight/progress-bar/ProgressBar.js","components/flightList/flight/FlightView.js","components/flightList/flight/FlightContainer.js","components/flightList/add-flight-panel/custom-hooks/useAddFlightForm.js","components/flightList/add-flight-panel/AddFlightPanel.js","components/flightList/FlightListView.js","components/flightList/FlightListContainer.js","components/tailList/tail/TailView.js","components/tailList/tail/TailContainer.js","components/tailList/TailListView.js","components/tailList/TailListContainer.js","components/orderList/order/OrderView.js","components/orderList/order/OrderContainer.js","components/orderList/OrderListView.js","components/orderList/OrderListContainer.js","helpers/MapHelper.js","components/map/MapView.js","components/map/MapContainer.js","components/schedule/scheduleRow/flightCell/FlightCell.js","components/schedule/scheduleRow/budgetCell/BudgetCell.js","components/schedule/scheduleRow/ScheduleRowView.js","components/schedule/scheduleRow/ScheduleRowContainer.js","constants/schedule.js","components/schedule/ScheduleTableView.js","components/schedule/ScheduleTableContainer.js","components/order-schedule/order-schedule-row/order-schedule-cell/OrderScheduleCell.js","components/order-schedule/order-schedule-row/OrderScheduleRowView.js","components/order-schedule/order-schedule-row/OrderScheduleRowContainer.js","components/order-schedule/OrderScheduleView.js","components/order-schedule/OrderScheduleContainer.js","components/store/licence-item/LicenceItem.js","constants/tails.js","components/store/StoreView.js","components/store/StoreContainer.js","components/achievements/achievement/AchievementItem.js","components/achievements/AchievementsView.js","components/achievements/AchievementsContainer.js","components/achievements/congratulation/CongratulationView.js","constants/achievements.js","components/achievements/congratulation/CongratulationContainer.js","helpers/AchievementHelper.js","App.js","serviceWorker.js","common/orders-generator/orders-generator.js","reducers/orders.js","reducers/tailes.js","reducers/flights.js","reducers/time.js","reducers/geography.js","reducers/money.js","reducers/achievements.js","reducers/index.js","store/store.js","index.js","assets/achievement_Magelan.svg","assets/achievement_avia_Croesus.svg","assets/achievement_our_hero.svg","assets/achievement_great_armator.svg","assets/achievement_achievment_hunter.svg","assets/aircraft-icon__gray.svg"],"names":["module","exports","__webpack_require__","p","MapActions","NONE","ADD_FLIGHT","CHANGE_PROGRESS","REMOVE_FLIGHT","flightStatuses","PLANED","TAKE_OFF","LANDING","DONE","IN_PROGRESS","NOT_TAKEOFF","NOT_LANDING","CANCELED","getFlightInTime","originFlight","airports","orders","currentTime","flight","Object","objectSpread","orderId","order","values","find","id","fromId","toId","dateTakeOff","dateLanding","pay","cost","name","concat","description","from","value","to","oldProgress","progress","status","prevProgress","isSame","console","log","diff","mapAction","getMapAction","getOrdersInTime","newProgress","getEmptyFlight","flightId","tailId","tail","dateType","getUpdatedDateAndCost","date","airport1Id","airport2Id","fuelCost","airportDistances","flightTime","clone","add","moment","utc","getCost","flightDateSortPredicat","a","b","isAfter","flightDateSortPredicatInvert","isBefore","getCellProperties","cellWidthScale","timelineOffsetHours","startDate","endDate","leftOffset","cellWidth","currentTimeSelector","state","time","airportObjectsSelector","geography","airportsSelector","tailsSelector","tails","maxTimeSelector","maxTime","ordersObjectSelector","items","ordersSelector","currentBudgetSelector","money","currentBudget","fuelCostSelector","_","licencesObjectSelector","licences","licenceIdsSelector","keys","map","currentLicenceIdsSelector","currentLicenceIds","achievementsSelector","achievements","all","currentAchievementIdsSelector","currentAchievemntIds","flightsDetailSelector","createSelector","flights","newFlight","flightsOnTime","tailCoordinates","filteredFlight","filter","tailAirport","airportId","flightProgress","length","sortedFlights","sort","endFlight","airport","coordinates","longt","latt","filteredFlightsSelector","flightByIdSelector","_ref","orderByIdSelector","_ref2","ordersOnTime","maxFlightIdSelector","reverse","ids","Math","max","apply","toConsumableArray","distanceBetweenAirportsSelector","airport1","airport2","round","d3","budgetChainsElementsSelector","budgetChains","chain","index","budgetChain","newId","reduce","result","chainFlight","saldo","getChainElement","licencedRegionsIdsSelector","licenceId","regionIds","licencedAirportsSelector","regionsId","includes","regionId","filteredFlightIdsSelector","filteredFlights","licencedOrderSelector","orderInWorkIds","every","region","licencedOrderIdsSelector","filteredOrders","maxOrderIdSelector","orderIds","ordersToScheduleSelector","rows","forEach","freeRow","row","secondOrder","firstOrder","push","getOrderSchaduleRows","rowIndex","licencesSelector","licencesObject","licence","isActive","stockingFlightCountsSelector","approachFlightBlancSelector","maxFlightId","baseFlight","baseTail","tailFlights","_getUpdatedDateAndCos","linkedFlightId","getApproachFlight","pageActionTypes","ADD_TAIL_IN_FLIGHT","INC_TIME","DEC_TIME","SET_START_TIME","SET_CURRENT_TIME","GENERATE_ORDERS","ADD_ORDER","ADD_EMPTY_FLIGHT","ADD_APPROACH_FLIGHT","CHECK_MONEY","CREATE_FLIGHT_FROM_ORDER","ADD_LICENCE","ADD_TAIL","ADD_ACHIEVEMENT","CHECK_CANCELED","addApproachFlight","type","payload","addOrder","createFlightFromOrder","newFlightId","TimelineView","incrementTime","decrementTime","setCurrentTime","setStartTime","startInterval","stopInterval","interval","react_default","createElement","className","format","onClick","connect","checkMoney","_useState","useState","_useState2","slicedToArray","didMount","setDidMount","useEffect","_useState3","_useState4","setIntervalConst","timeline_TimelineView","i","setInterval","clearInterval","ItemTypes","TAIL","ORDER","SCHEDULE","useToggler","defaultExpanded","arguments","undefined","expanded","setExpanded","toggleExpanded","ProgressBar","style","left","transition","FlightView","isOver","canDrop","onRemove","_useToggler","iata","floor","progress_bar_ProgressBar","getDetails","flightTarget","drop","props","FLIGHT","flight_FlightContainer","ownProps","DropTarget","monitor","connectDropTarget","dropTarget","flight_FlightView","useAddFlightForm","onSubmit","onCancel","defaultDateTakeOff","defaultDateLanding","defaultInputs","inputs","setInputs","getInputValue","target","hundleSubmit","event","preventDefault","hundleCancel","handleInputChange","_getUpdatedDateAndCos3","hundleMaxTimeChange","_getUpdatedDateAndCos2","getAirportSelector","sortedAirports","onChange","key","AddFlightPanel","onSave","_useAddFlightFrom","useAddFlightFrom","airportSelect","TextField","InputProps","disableUnderline","fontSize","disabled","FlightListView","flightIds","addFlight","addEmptyFlight","removeFlight","isAddPanel","setIsAddPanel","getAddButtons","onSaveCallback","onCancelCallback","add_flight_panel_AddFlightPanel","getAddPanel","getFlights","flightList_FlightListView","TailView","prototype","PropTypes","shape","number","string","tailSource","beginDrag","endDrag","getDropResult","addTailAction","TailContainer","connectDragSource","tail_TailView","func","DragSource","dragSource","connectDragPreview","dragPreview","isDragging","TailListView","addTailInFlight","tailsArray","tail_TailContainer","tailList_TailListView","OrderView","propTypes","instanceOf","orderSource","dropResult","order_OrderView","OrderListView","selectedOrder","ref","orderRefs","current","scrollIntoView","React","createRef","order_OrderContainer","maxOrderId","generateOrders","isRequired","orderList_OrderListView","translateAlongRoute","path","t","_getPointsAndAngle","getPointsAndAngle","currentPoint","prevPoint","angle","x","y","pathLength","getTotalLength","getPointAtLength","atan2","PI","width","height","ACTIVE_COUNTRY_COLOR","ACTIVE_COUNTRY_BORDER","ACTIVE_AIRPORT_FILL","INACTIVE_COUNTTRY_BORDER","INACTIVE_COUNTRY_COLOR","INACTIVE_AIRPORT_FILL","CURRENT_PATH_PREFIX","PATH_PREFIX","updateRoutes","svg","onOrderClick","isShowPlaned","lines","getFlightLine","select","empty","append","attr","remove","selectAll","data","enter","d","nodes","new","duration","orderLines","on","showPlanedFlights","getInvertSVGPointCoordinate","projection","point","invert","getAircraftsDetails","linkedFlights","linkedFlight","_getPointsOnFlight","flightLine","currentPosition","prevPosition","nextPosition","endPosition","getPointsOnFlight","node","changeState","currentPathCoordinates","currentPathObject","onFlight","MapView","countries","isLoaded","setIsLoaded","setSvg","scale","translate","licencedAirports","features","properties","showMapBackground","logt","text","initAirports","aircrafts","aircraftIconRed","aircraftIconGray","initAircraft","init","aircraft","aircraftImage","currentPath","_getPointsAndAngle2","ease","attrTween","processAircraftPoint","updateAircrafts","Fragment","map_MapView","FlightCell","blankApproachFlight","_getCellProperties","Tooltip","disableFocusListener","title","placement","BudgetCell","chainElement","arrayOf","object","fromIata","toIata","ScheduleRowView","isLast","budgetChainRows","budgetCell_BudgetCell","flightCels","flightCell_FlightCell","rowTarget","scheduleRow_ScheduleRowView","CELL_WIDTH_SCALE","TIMELINE_OFFSET_HOURS","ScheduleTableView","tailsCount","tailRows","scheduleRow_ScheduleRowContainer","schedule_ScheduleTableView","OrderScheduleRowView","order_schedule_cell_OrderScheduleCell","OrderScheduleView","orderSchedule","maxRowIndex","cell","Array","fill","cells","order_schedule_row_OrderScheduleRowContainer","order_schedule_OrderScheduleView","LicenceItem","image","addLicence","src","alt","aircraftCost","StoreView","images","addTail","setAirportId","licence_item_LicenceItem","imageKey","newAirportId","aircraftIcon","eurasia","africa","northAmerica","southAmerica","australia","antarctida","store_StoreView","AchievementItem","achievement","currentAchievementIds","isOpen","achievement_empty","congratulation","AcheivementsView","achievement_AchievementItem","achievementMagelan","achievementAviaCroesus","achievementOurHero","achievementGreatArmator","achievement_achievment_hunter","achievements_AchievementsView","WIDTH","HEIGHT","CongratulationView","lineNodes","translateAlong","BUDGET_ACHIEVEMENT_LIMIT","STOCKING_ACHIEVEMENT_LIMIT","TAIL_ACHIEVEMENT_LIMIT","congratulation_CongratulationContainer","licencesIds","stockingFlightCounts","addAchievement","achievementId","setIsOpen","achievementQueue","setAchievementQueue","_useState5","_useState6","achievementToShow","setAchievementToShow","achievementIdsList","budgetAchievementLimit","stockingAchievementLimit","tailAchievementLimit","getAchievementList","newAchievement","slice","setTimeout","Modal","aria-labelledby","aria-describedby","onClose","open","congratulation_CongratulationView","tabNames","MAP_TAB","SCHEDULE_TAB","STORE","ACHIEVEMENTS","DragDropContext","HTML5Backend","checkCanceled","setCountries","setSelectedOrder","then","catch","error","tabName","setTabName","getActiveClass","logo","tailList_TailListContainer","flightList_FlightListContainer","orderList_OrderListContainer","timeline_TimelineContainer","hundleOrderClick","map_MapContainer","schedule_ScheduleTableContainer","order_schedule_OrderScheduleContainer","store_StoreContainer","achievements_AchievementsContainer","getTabContent","Boolean","window","location","hostname","match","maxHourOffset","minHourOffset","randomCoeff","maxFlightOnHour","random","flighOnHour","timeOffset","_getRandomFromToAirpo","airportIds","fromRandomIndex","splice","getRandomFromToAirportIds","flightLength","_getCostAndPay","findAirport","allowance","getCostAndPay","_getOrderDescription","payloads","shorts","places","randomPayload","randomPlace","randomPayloadShort","randomPlaceShort","getOrderDescription","generateOrder","initialState","1","2","startTime","countriesId","costOnHour","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","24","25","30","31","39","40","41","44","45","46","regions","21","22","23","26","27","28","29","32","rootReducer","combineReducers","action","_action$payload","newOrders","maxTailId","newState","defineProperty","canceledFlights","linkedOrder","linkedTail","airportFrom","newCurrentTime","budget","linkedChainIndex","findIndex","maxId","indexOf","store","createStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d498e4ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eurasia.0246aa14.png\";","module.exports = __webpack_public_path__ + \"static/media/africa.cb6da07e.png\";","module.exports = __webpack_public_path__ + \"static/media/north_america.e4f8c1e3.png\";","module.exports = __webpack_public_path__ + \"static/media/south_america.2c730516.png\";","module.exports = __webpack_public_path__ + \"static/media/australia.50c22623.png\";","module.exports = __webpack_public_path__ + \"static/media/antarctica.499b78ec.png\";","module.exports = __webpack_public_path__ + \"static/media/achievement_empty.73f27f6c.svg\";","module.exports = __webpack_public_path__ + \"static/media/map-mapping-logo.098cb11e.svg\";","module.exports = __webpack_public_path__ + \"static/media/aircraft-icon__red.40120811.svg\";","export const MapActions = {\r\n    NONE: 'none',\r\n    ADD_FLIGHT: 'add_flight',\r\n    CHANGE_PROGRESS: 'change_progress',\r\n    REMOVE_FLIGHT: 'remove_flight'\r\n}","export const flightStatuses = {\r\n    PLANED: 'planed',\r\n    TAKE_OFF: 'takeOff',\r\n    LANDING: 'landing',\r\n    DONE: 'done',\r\n    IN_PROGRESS: 'in progress',\r\n    NOT_TAKEOFF: 'not takeOff',\r\n    NOT_LANDING: 'not landing',\r\n    CANCELED: 'canceled',\r\n}","import { MapActions } from '../constants/map-actions'\r\nimport moment from 'moment'\r\nimport { flightStatuses } from '../constants/flight-status'\r\n\r\nexport function getFlightInTime(originFlight, airports, orders, currentTime ) {\r\n    const flight = {...originFlight}\r\n    if (flight.orderId) {\r\n        const order = Object.values(orders).find(order => order.id === flight.orderId)\r\n        flight.fromId = order.fromId\r\n        flight.toId = order.toId\r\n        flight.dateTakeOff = order.dateTakeOff\r\n        flight.dateLanding = order.dateLanding\r\n        flight.pay = order.pay\r\n        flight.cost = order.cost\r\n        flight.name = `${order.name}`\r\n        flight.description = order.description\r\n    }\r\n    \r\n    flight.from = {...airports.find(value => value.id === flight.fromId)}\r\n    flight.to = {...airports.find(value => value.id === flight.toId)}\r\n    const { dateTakeOff, dateLanding } = flight\r\n    const oldProgress = flight.progress\r\n    const oldStatus = flight.status\r\n\r\n    switch(true) {\r\n        case (oldStatus === flightStatuses.CANCELED):\r\n            flight.progress = -1\r\n            flight.prevProgress = -1\r\n            flight.status = flightStatuses.CANCELED\r\n            break\r\n        case (!dateTakeOff):\r\n            flight.progress = -1\r\n            flight.prevProgress = -1\r\n            flight.status = flightStatuses.NOT_TAKEOFF\r\n            break\r\n        case (!dateLanding):\r\n            flight.progress = -1\r\n            flight.prevProgress = -1\r\n            flight.status = flightStatuses.NOT_LANDING\r\n            break   \r\n        case (currentTime < dateTakeOff):\r\n            flight.progress = -1   \r\n            flight.prevProgress = -1         \r\n            flight.status = flightStatuses.PLANED\r\n            break\r\n        case (currentTime.isSame(dateTakeOff)):\r\n            console.log('CANCELED')\r\n            // if (linkTail && linkTail.airportId === flight.fromId) {\r\n            //     flight.progress = 0\r\n            //     flight.prevProgress = 0\r\n            //     flight.status = flightStatuses.TAKE_OFF\r\n            // } else {\r\n            //     flight.progress = -1\r\n            //     flight.prevProgress = -1\r\n            //     flight.status = flightStatuses.CANCELED\r\n            // }\r\n            if (flight.status !== flightStatuses.CANCELED) {\r\n                flight.progress = 0\r\n                flight.prevProgress = 0\r\n                flight.status = flightStatuses.TAKE_OFF\r\n            } else {\r\n                flight.progress = -1\r\n                flight.prevProgress = -1\r\n            }\r\n            break  \r\n        case (currentTime.isSame(dateLanding)):\r\n            flight.progress = 100\r\n            flight.prevProgress =  (currentTime.diff(dateTakeOff, 'hours') - 1) / \r\n                dateLanding.diff(dateTakeOff, 'hours') * 100 \r\n            flight.status = flightStatuses.LANDING\r\n            break      \r\n        case (currentTime > dateLanding):\r\n                flight.progress = 101\r\n                flight.prevProgress = 101\r\n                flight.status = flightStatuses.DONE\r\n            break\r\n        case (dateTakeOff < currentTime && currentTime < dateLanding):             \r\n            flight.progress = currentTime.diff(dateTakeOff) / \r\n                dateLanding.diff(dateTakeOff) * 100 \r\n            flight.prevProgress =  (currentTime.diff(dateTakeOff, 'hours') - 1) / \r\n                dateLanding.diff(dateTakeOff, 'hours') * 100   \r\n            flight.status = flightStatuses.IN_PROGRESS\r\n            break\r\n        default: break;\r\n    }\r\n    flight.mapAction = getMapAction(flight.prevProgress, flight.progress)\r\n    flight.oldProgress = oldProgress\r\n    return flight\r\n}\r\n\r\nexport function getOrdersInTime(flight, airports, orders, currentTime ) {\r\n    if (flight.orderId) {\r\n        const order = Object.values(orders).find(order => order.id === flight.orderId)\r\n        flight.fromId = order.fromId\r\n        flight.toId = order.toId\r\n        flight.dateTakeOff = order.dateTakeOff\r\n        flight.dateLanding = order.dateLanding\r\n        flight.pay = order.pay\r\n        flight.cost = order.cost\r\n        flight.name = `${order.name}`\r\n        flight.description = order.description\r\n    }\r\n    \r\n    flight.from = {...airports.find(value => value.id === flight.fromId)}\r\n    flight.to = {...airports.find(value => value.id === flight.toId)}\r\n    const { dateTakeOff, dateLanding } = flight\r\n    const oldProgress = flight.progress\r\n\r\n    switch(true) {\r\n        case (!dateTakeOff):\r\n            flight.progress = -1\r\n            flight.status = flightStatuses.NOT_TAKEOFF\r\n            break\r\n        case (!dateLanding):\r\n            flight.progress = -1\r\n            flight.progress = 0\r\n            flight.status = flightStatuses.NOT_LANDING\r\n            break   \r\n        case (currentTime < dateTakeOff):\r\n            flight.progress = -1\r\n            flight.status = flightStatuses.PLANED\r\n            break\r\n        case (currentTime.isSame(dateTakeOff)):\r\n            flight.progress = 0\r\n            flight.status = flightStatuses.TAKE_OFF\r\n            break  \r\n        case (currentTime.isSame(dateLanding)):\r\n            flight.progress = 100\r\n            flight.status = flightStatuses.LANDING\r\n            break      \r\n        case (currentTime > dateLanding):\r\n            flight.progress = 101\r\n            flight.status = flightStatuses.DONE\r\n            break\r\n        case (dateTakeOff < currentTime && currentTime < dateLanding):  \r\n            flight.progress = currentTime.diff(dateTakeOff) / \r\n                dateLanding.diff(dateTakeOff) * 100 \r\n            flight.status = flightStatuses.IN_PROGRESS \r\n            break\r\n        default: break;\r\n    }\r\n    flight.mapAction = getMapAction(oldProgress, flight.progress)    \r\n    return flight\r\n}\r\n\r\nexport function getMapAction(oldProgress, newProgress ) {    \r\n    switch (true) {\r\n        case oldProgress === 0 && newProgress === 0:\r\n            return MapActions.ADD_FLIGHT\r\n        case oldProgress > -1 && newProgress > -1: \r\n            return MapActions.CHANGE_PROGRESS       \r\n        default: return MapActions.NONE\r\n    }    \r\n}\r\n\r\nexport function getApproachFlight(flightId, tails, flights, fuelCost, \r\n    airportDistances, maxFlightId, currentTime) {\r\n    const baseFlight = flights.find(flight => flight.id === flightId)\r\n    const baseTail = tails.find(tail => tail.id === baseFlight.tailId)\r\n    const tailFlights = \r\n        flights.filter(flight => flight.status !== flightStatuses.CANCELED &&\r\n            flight.tailId === baseTail.id &&\r\n            flight.dateTakeOff.isBefore(baseFlight.dateTakeOff))\r\n            .sort(flightDateSortPredicatInvert)    \r\n    const dateLanding = baseFlight.dateTakeOff.clone().add(-1, 'hours')\r\n    const fromId = (tailFlights.length > 0) ? tailFlights[0].toId : baseTail.airportId\r\n    const toId = baseFlight.fromId\r\n    const { dateTakeOff, cost } = \r\n        getUpdatedDateAndCost(dateLanding, dateType.LANDING, fromId, toId, fuelCost, airportDistances)\r\n\r\n    return {\r\n        dateTakeOff,\r\n        dateLanding,\r\n        fromId,\r\n        toId,\r\n        cost,\r\n        id: maxFlightId + 1,\r\n        name: `Подлет ${maxFlightId + 1}`,\r\n        tail: baseTail,\r\n        tailId: baseTail.id,\r\n        status: dateTakeOff.isAfter(currentTime) || dateTakeOff.isSame(currentTime) ? \r\n            'planned' : 'canceled',\r\n        progress: -1,\r\n        orderId: null,\r\n        pay: 0,\r\n        linkedFlightId: baseFlight.id,\r\n      }\r\n}\r\n\r\nexport function getEmptyFlight(flightId, tailId, orderId) {    \r\n    return {\r\n        id: flightId,\r\n        name: `Flight ${flightId}`,\r\n        tail: null,\r\n        tailId: tailId || null,\r\n        fromId: null,\r\n        toId: null,\r\n        dateTakeOff: null,\r\n        dateLanding: null,\r\n        status: 'planned',\r\n        progress: -1,\r\n        orderId: orderId || null,\r\n        pay: 0,\r\n      }\r\n}\r\n\r\nconst getCost = (dateTakeOff, dateLanding, fuelCost) => {\r\n    return dateLanding.diff(moment.utc(dateTakeOff), 'hours') * fuelCost\r\n}\r\n\r\nexport function getRandomFromToAirportIds(airportIds) {\r\n    const fromRandomIndex = Math.round(Math.random() * (airportIds.length - 1))\r\n    const fromId = airportIds[fromRandomIndex]\r\n    airportIds.splice(fromRandomIndex, 1)\r\n    const toRandomIndex = Math.round(Math.random() * (airportIds.length - 1))\r\n    const toId =  airportIds[toRandomIndex]\r\n    return { fromId, toId }\r\n}\r\n\r\nexport  function getCostAndPay(fromId, toId, airportDistances, airports, fuelCost) {\r\n    const findAirport = (id) => airports.find(airport => airport.id === id)\r\n    const cost = airportDistances(fromId, toId) * fuelCost\r\n    const allowance = findAirport(fromId).regionId !== findAirport(toId).regionId ? 2000 : 0\r\n    const pay = cost + Math.round(2000 + Math.random() * 1000) + allowance\r\n    return { cost, pay }\r\n}\r\n\r\nexport const dateType = {\r\n    TAKE_OFF: 'takeOff',\r\n    LANDING: 'landing',\r\n}\r\n\r\nexport const getUpdatedDateAndCost = (date, dateType, airport1Id, airport2Id, fuelCost, airportDistances) => {\r\n    const flightTime = airportDistances(airport1Id, airport2Id)\r\n    const dateTakeOff = (dateType === dateType.TAKE_OFF) ? date : date.clone().add(-flightTime, 'hours')\r\n    const dateLanding = (dateType === dateType.LANDING) ? date : date.clone().add(flightTime, 'hours')\r\n    const cost = getCost(dateTakeOff, dateLanding, fuelCost)\r\n    return { dateLanding, dateTakeOff, cost }\r\n}\r\n\r\nexport function getOrderDescription() {\r\n    const payloads = [\r\n        { description: 'оружия', shorts: ['Быстрые пули', 'Укус смерти', 'Маленький *Бум*', 'Крошка 40-мм', 'Вжух и все'] },\r\n        { description: 'элитного спиртного', shorts: ['Белое полусладкое', 'Бренди от доброжелателя', 'Стакашка рома', 'Безалкогольное и бессмысленное', 'Настойка на стрекозах'] },\r\n        { description: 'научного оборудования', shorts: ['Штука с кнопками', 'Бегающие огоньки', 'Синхрофазотрон', 'Скрепки', 'Синяя изолента'] },\r\n        { description: 'зонтиков для коктейлей', shorts: ['Удиви свою подружку', 'Я это не заказывал!', 'Что-то сладенькое', 'Серпантин', 'Подставка под пиво'] },\r\n        { description: 'солнечных очков', shorts: ['Крутота', 'Вижу облака', 'Глаза больше не болят', 'Like a boss', 'Вспомни диско'] },\r\n        { description: 'патронов', shorts: ['Быстро реши проблемы', 'Последний для себя', 'Много не бывает', 'Соль и спички', 'Серебрянная пуля'] },\r\n        { description: 'плавательных шапочек', shorts: ['Будь лысым', 'Резиновое веселье', 'Красная шапочка', 'Аэродинамичный', 'Шапочка чемпиона'] },\r\n        { description: 'канареек', shorts: ['Птичка флегма', 'Птичка предупреждала', 'Последнее предупреждение', 'Все тихо', 'Цвет оптимизма'] },\r\n        { description: 'фейерверков', shorts: ['Разгоняем демонов', 'Время целоваться', 'Мы так ждали этого', 'И все???', 'Заряжай деньгами'] },\r\n        { description: 'авокадо', shorts: ['Салат в пути', 'Косточка рядом', 'Зеленая картошка', 'Можно масочку намутить', 'Типо польза'] },\r\n        { description: 'чулок и подвязок', shorts: ['Черное кружевное', 'Красное кружевное', 'Белое кружевное', 'Крупная сетка', 'Старомодные чулочки'] },\r\n        { description: 'чулок и подвязок', shorts: ['Черное кружевное', 'Красное кружевное', 'Белое кружевное', 'Крупная сетка', 'Старомодные чулочки'] },\r\n        { description: 'чулок и подвязок', shorts: ['Черное кружевное', 'Красное кружевное', 'Белое кружевное', 'Крупная сетка', 'Старомодные чулочки'] },\r\n    ]\r\n\r\n    const places = [\r\n        { description: 'для местного зоопарка', shorts: ['тиграм на радость', 'для кроликов', 'надежда утконоса', 'с сурикатами', 'для серпентария'] },\r\n        { description: 'для фестиваля воздушных шаров', shorts: ['вверх! вверх!', 'для стратостата', 'и уходим вверх', 'и сбрасываем баласт', 'для подьема'] },\r\n        { description: 'для бара на пляже', shorts: ['для блондиночек', 'для брюнеточек', 'для качка на протеинах', 'для дедульки в ударе', 'на всю ночь'] },\r\n        { description: 'для Корпорации Зла', shorts: ['для роботов убийц', 'для пираний', 'для старенького Бонда', 'для kpi', 'на заседание по захвату мира'] },\r\n        { description: 'для чемпионата по плаванию', shorts: ['и идем вниз', 'для спасательного круга', 'для дорожки кролистов', 'для эстафеты', 'чтоб синхронно'] },\r\n        { description: 'для горнодобывающей компании', shorts: ['чтоб копалось хорошо', 'для мастера', 'для новой шахты', 'для карьера', 'на переработку'] },\r\n        { description: 'для мишленовского рестарана', shorts: ['на десерт', 'на ланч', 'повору под нож', 'для критика', 'офикам на радость'] },\r\n        { description: 'для авиакомпании', shorts: ['и от винта!', 'для ICAO', 'стюардессам', 'чтоб леталось', 'и идем по приборам'] },\r\n    ]\r\n\r\n    const randomPayload = Math.round(Math.random() * (payloads.length - 1))\r\n    const randomPlace = Math.round(Math.random() * (places.length - 1))\r\n    const randomPayloadShort = Math.round(Math.random() * (5 - 1))\r\n    const randomPlaceShort = Math.round(Math.random() * (5 - 1))\r\n\r\n    return {\r\n        description: `Груз ${payloads[randomPayload].description} ${places[randomPlace].description}`,\r\n        title: `${payloads[randomPayload].shorts[randomPayloadShort]} ${places[randomPlace].shorts[randomPlaceShort]}`\r\n    }\r\n}\r\n\r\nexport const flightDateSortPredicat = (a, b) => a.dateTakeOff.isAfter(b.dateTakeOff) ? 1 : -1\r\nexport const flightDateSortPredicatInvert = (a, b) => a.dateTakeOff.isBefore(b.dateTakeOff) ? 1 : -1\r\n","export function getCellProperties(cellWidthScale, timelineOffsetHours, currentTime, startDate, endDate) {\r\n    const leftOffset = cellWidthScale * (startDate.diff(currentTime, 'hours') + timelineOffsetHours)\r\n    const cellWidth = cellWidthScale * endDate.diff(startDate, 'hours')\r\n\r\n    return { leftOffset, cellWidth}\r\n}\r\n\r\nexport function getOrderSchaduleRows(orders) {\r\n    const rows = [[]]\r\n    orders.forEach(order => {\r\n        const freeRow = rows.find(row => \r\n                (row.length === 0) || !row.find(b => isIntersect(b, order)))\r\n        if (freeRow) {\r\n            freeRow.push(order)\r\n        } else {\r\n            rows.push([order])\r\n        }\r\n    })\r\n    return rows\r\n\r\n}\r\nfunction isIntersect(firstOrder, secondOrder) {\r\n    return firstOrder.dateTakeOff.isSame(secondOrder.dateTakeOff) ||\r\n        firstOrder.dateLanding.isSame(secondOrder.dateTakeOff) ||\r\n        firstOrder.dateTakeOff.isAfter(secondOrder.dateTakeOff) ||\r\n        firstOrder.dateTakeOff.isAfter(secondOrder.dateLanding) ||\r\n        firstOrder.dateLanding.isAfter(secondOrder.dateLanding) ||\r\n        firstOrder.dateLanding.isAfter(secondOrder.dateTakeOff) ||\r\n        (firstOrder.dateTakeOff.isAfter(secondOrder.dateTakeOff) &&\r\n         firstOrder.dateLanding.isBefore(secondOrder.dateLanding))\r\n}","import { createSelector } from 'reselect'\r\nimport { getFlightInTime, getOrdersInTime, getApproachFlight } from '../helpers/FlightHelper'\r\nimport { getChainElement } from '../helpers/BudgetHelper'\r\nimport { getOrderSchaduleRows } from '../helpers/ScheduleHelper'\r\nimport { flightStatuses } from '../constants/flight-status'\r\nimport * as d3 from 'd3'\r\n\r\nexport const currentTimeSelector = (state) => state.time.currentTime\r\nexport const airportObjectsSelector = (state) => state.geography.airports\r\nexport const airportsSelector = (state) => Object.values(state.geography.airports)\r\nexport const airportIdsSelector = (state) => Object.keys(state.geography.airports).map(value => +value)\r\nexport const flightsSelector = (state) => Object.values(state.flights)\r\nexport const flightsObjectSelector = (state) => state.flights\r\nexport const flightIdsSelector = (state) => Object.keys(state.flights).map(value => +value).reverse()\r\nexport const tailsSelector = (state) => state.tails\r\nexport const maxTimeSelector = (state) => state.time.maxTime\r\nexport const ordersObjectSelector = (state) => state.orders.items\r\nexport const ordersSelector = (state) => Object.values(state.orders.items)\r\nexport const orderIdsSelector = (state) => Object.keys(state.orders.items).map(value => +value).reverse()\r\nexport const currentBudgetSelector = (state) => state.money.currentBudget\r\nexport const fuelCostSelector = (_) => 100\r\nexport const budgetChainsSelector = (state) => state.money.budgetChains\r\nexport const licencesObjectSelector = (state) => state.geography.licences\r\nexport const licenceIdsSelector = (state) => Object.keys(state.geography.licences).map(value => +value)\r\nexport const currentLicenceIdsSelector = (state) => state.geography.currentLicenceIds\r\nexport const achievementsSelector = (state) => state.achievements.all\r\nexport const currentAchievementIdsSelector = (state) => state.achievements.currentAchievemntIds\r\n\r\nexport const flightsDetailSelector = createSelector(\r\n    flightsSelector,\r\n    tailsSelector,\r\n    ordersObjectSelector,\r\n    (flights, tails, orders) => flights.map((flight) => {\r\n            const newFlight = { ...flight }\r\n            if (flight.tailId) {\r\n                newFlight.tail = tails.find(tail => tail.id === flight.tailId)\r\n            }\r\n            if (flight.orderId) {\r\n                const order = Object.values(orders).find(order => order.id === flight.orderId)\r\n                newFlight.fromId = order.fromId\r\n                newFlight.toId = order.toId\r\n                newFlight.dateTakeOff = order.dateTakeOff\r\n                newFlight.dateLanding = order.dateLanding\r\n                newFlight.pay = order.pay\r\n                newFlight.cost = order.cost\r\n                newFlight.name = `${order.name}`\r\n                newFlight.description = order.description\r\n            }\r\n\r\n            return newFlight\r\n    })\r\n)\r\n\r\nexport const flightsOnTime = createSelector(\r\n    currentTimeSelector,\r\n    airportsSelector,\r\n    flightsDetailSelector,\r\n    ordersObjectSelector,\r\n    () => getFlightInTime,\r\n    (currentTime, airports, flights, orders, getFlightInTime) => \r\n        flights.map(flight => getFlightInTime(flight, airports, orders, currentTime))            \r\n)\r\n\r\nexport const tailCoordinates = createSelector(\r\n    tailsSelector,\r\n    airportsSelector,    \r\n    flightsOnTime,\r\n    currentTimeSelector,\r\n    (tails, airports, flights, currentTime) => {\r\n        return tails.map((tail) => {\r\n            const filteredFlight = \r\n                flights.filter(flight => flight.status !== flightStatuses.CANCELED && flight.tailId === tail.id &&\r\n                    flight.dateTakeOff &&\r\n                    flight.dateTakeOff.isBefore(currentTime))\r\n            let tailAirport = tail.airportId ? airports.find(value => value.id === tail.airportId) : null\r\n            let flightProgress = -1;\r\n            if (filteredFlight.length > 0) {\r\n                const sortedFlights = \r\n                    filteredFlight.sort((a, b) => a.dateLanding.diff(b.dateLanding))\r\n                const endFlight = sortedFlights[sortedFlights.length - 1]\r\n                flightProgress = endFlight.progress \r\n                switch (true) {\r\n                    case flightProgress <= 0: tailAirport = airports.find(value => value.id === endFlight.fromId); break;\r\n                    case flightProgress >= 100: tailAirport = airports.find(value => value.id === endFlight.toId); break;\r\n                    default: tailAirport = null;\r\n                }\r\n            } \r\n            flightProgress = flightProgress < 100 ? flightProgress : -1\r\n            \r\n            return tailAirport ? \r\n                { ...tail, airport: tailAirport, airportId: tailAirport.id, \r\n                    coordinates: [tailAirport.longt, tailAirport.latt],\r\n                    progress: flightProgress\r\n                } \r\n                : { ...tail, progress: flightProgress }\r\n        })\r\n    }\r\n)\r\n\r\nexport const filteredFlightsSelector = createSelector(\r\n    flightsOnTime,\r\n    currentTimeSelector,\r\n    (flights, currentTime) => {\r\n        const MAX_HOUR_DIFF = 2\r\n        const filteredFlights = \r\n            flights.filter(flight =>  !flight.dateLanding || \r\n                currentTime.diff(flight.dateLanding, 'hours') <= MAX_HOUR_DIFF)\r\n        \r\n        return filteredFlights\r\n    }\r\n)\r\n\r\nexport const tailsDetalsSelector = createSelector(\r\n    airportsSelector,\r\n    tailsSelector,\r\n    (airports, tails) => tails.map(tail => \r\n        ({ ...tail, airport: tail.airportId ? \r\n            airports.find(value => value.id === tail.airportId) : null }))\r\n)\r\n\r\nexport const airportByIdSelector = createSelector(\r\n    airportsSelector,\r\n    (airports, id) => airports.find(value => value.id === id)\r\n)\r\n\r\nexport const flightByIdSelector = createSelector(\r\n    currentTimeSelector,\r\n    airportsSelector,\r\n    flightsObjectSelector,\r\n    ordersObjectSelector,\r\n    (_, { id }) => id,\r\n    () => getFlightInTime,\r\n    (currentTime, airports, flights, orders, id, getFlightInTime) => {\r\n        return getFlightInTime({...flights[id]}, airports, orders, currentTime)\r\n    }\r\n)\r\n\r\nexport const orderByIdSelector = createSelector(\r\n    currentTimeSelector,\r\n    airportsSelector,\r\n    ordersObjectSelector,\r\n    (_, { id }) => id,\r\n    (currentTime, airports, orders, id) => {\r\n        return getFlightInTime({...orders[id]}, airports, orders, currentTime) \r\n    }\r\n)\r\n\r\nexport const ordersOnTime = createSelector(\r\n    currentTimeSelector,\r\n    airportsSelector,\r\n    ordersObjectSelector,\r\n    () => getOrdersInTime,\r\n    (currentTime, airports, orders, getOrdersInTime) => {\r\n        return Object.values(orders).map(order => getOrdersInTime(order, airports, orders, currentTime)) \r\n    }\r\n)\r\n\r\nexport const maxFlightIdSelector = createSelector(\r\n    flightIdsSelector,\r\n    (ids) => ids.length > 0 ? Math.max(...ids) : 0\r\n)\r\n\r\nexport const distanceBetweenAirportsSelector = createSelector(\r\n    airportObjectsSelector,\r\n    (airports) => {\r\n        return (airport1Id, airport2Id) => {\r\n            const airport1 = airports[airport1Id]\r\n            const airport2 = airports[airport2Id]\r\n\r\n            return Math.round(\r\n                d3.geoDistance(\r\n                    [airport1.longt, airport1.latt],\r\n                    [airport2.longt, airport2.latt]) * 6371 / 760)\r\n        }\r\n    }\r\n)\r\n\r\nexport const budgetChainsElementsSelector = createSelector(\r\n    filteredFlightsSelector,\r\n    budgetChainsSelector,\r\n    (flights, budgetChains) => {\r\n        return budgetChains.map((chain, index) => getChainElement(chain, flights, index)).filter(chain => chain)\r\n    }    \r\n)\r\n\r\nexport const licencedRegionsIdsSelector = createSelector(\r\n    licencesObjectSelector,\r\n    currentLicenceIdsSelector,\r\n    (licences, currentLicenceIds) => {\r\n        return currentLicenceIds\r\n            .map(licenceId => licences[licenceId].regionIds)\r\n            .reduce((result, regionIds) => result = [...result, ...regionIds], [])\r\n    }\r\n)\r\n\r\nexport const licencedAirportsSelector = createSelector(\r\n    licencedRegionsIdsSelector,\r\n    airportsSelector,\r\n    (regionsId, airports) => {\r\n        return airports.filter(airport => regionsId.includes(airport.regionId))\r\n    }\r\n)\r\n\r\n\r\n\r\nexport const filteredFlightIdsSelector = createSelector(\r\n    filteredFlightsSelector,\r\n    (filteredFlights) => {\r\n        return filteredFlights.length > 0 ? filteredFlights.map(flight => flight.id).reverse() : []\r\n    }\r\n)\r\n\r\nexport const licencedOrderSelector = createSelector(\r\n    ordersOnTime,\r\n    airportObjectsSelector,\r\n    licencedRegionsIdsSelector,\r\n    filteredFlightsSelector,\r\n    currentTimeSelector,\r\n    (orders, airports, regionIds, flights, currentTime) => {\r\n        const orderInWorkIds = flights.map(flight => flight.orderId)\r\n        return orders && orders.length > 0 ? \r\n            orders.filter(order =>\r\n                    order.dateTakeOff.diff(currentTime, 'hours') > 0 &&\r\n                    !orderInWorkIds.includes(order.id))\r\n                .map(order => ({...order, regionIds: [airports[order.fromId].regionId, airports[order.toId].regionId]}))\r\n                .filter(order => order.regionIds.every(region => regionIds.includes(region)))\r\n                .reverse() : []\r\n    }\r\n)\r\n\r\nexport const licencedOrderIdsSelector = createSelector(\r\n    licencedOrderSelector,\r\n    (filteredOrders) => filteredOrders.length > 0 ? filteredOrders.map(order => order.id) : []\r\n)\r\n\r\nexport const maxOrderIdSelector = createSelector(\r\n    orderIdsSelector,\r\n    (orderIds) => {\r\n        return orderIds.length === 0 ? 0 : Math.max(...orderIds)\r\n    }\r\n)\r\n\r\nexport const ordersToScheduleSelector = createSelector(\r\n    ordersOnTime,\r\n    airportObjectsSelector,\r\n    licencedRegionsIdsSelector,\r\n    filteredFlightsSelector,\r\n    currentTimeSelector,\r\n    (orders, airports, regionIds, flights, currentTime) => {\r\n        const orderInWorkIds = flights.map(flight => flight.orderId)\r\n        const filteredOrders = orders && orders.length > 0 ? \r\n            orders.filter(order =>\r\n                    order.dateLanding.diff(currentTime, 'hours') > -4 &&\r\n                    !orderInWorkIds.includes(order.id))\r\n                .map(order => ({...order, regionIds: [airports[order.fromId].regionId, airports[order.toId].regionId]}))\r\n                .filter(order => order.regionIds.every(region => regionIds.includes(region)))\r\n                .reverse() : []\r\n\r\n        const sorterArray = [...filteredOrders].sort((a, b) => a.dateTakeOff.isAfter(b.dateTakeOff) ? 1 : -1)\r\n        const rows = getOrderSchaduleRows(sorterArray)\r\n                \r\n        return rows.reduce((result, orders, index) => \r\n            [...result, ...orders.map(order => { order.rowIndex = index; return order })], [])\r\n    }\r\n)\r\n\r\nexport const licencesSelector = createSelector(\r\n    licencesObjectSelector,\r\n    currentLicenceIdsSelector,\r\n    (licencesObject, currentLicenceIds) => {\r\n        return Object.values(licencesObject).map(licence => \r\n            ({...licence, isActive: (currentLicenceIds.includes(licence.id)) })\r\n        )\r\n    }\r\n)\r\n\r\nexport const stockingFlightCountsSelector = createSelector(\r\n    flightsOnTime,\r\n    (flights) => {\r\n        return flights.filter(flight => flight.progress >= 100 \r\n            && flight.description \r\n            && flight.description.includes('чулок')).length\r\n    }\r\n)\r\n\r\nexport const approachFlightBlancSelector = createSelector(\r\n    filteredFlightsSelector,\r\n    tailCoordinates,\r\n    distanceBetweenAirportsSelector,\r\n    fuelCostSelector,\r\n    maxFlightIdSelector,\r\n    currentTimeSelector,\r\n    (flights, tails, airportDistances, fuelCost, maxFlightId, currentTime) => {\r\n        return (flightId) => {\r\n            return getApproachFlight(flightId, tails, flights, fuelCost, airportDistances, maxFlightId, currentTime)\r\n        }\r\n    }\r\n)","export function getChainElement(budgetChain, flights, newId) {\r\n    return budgetChain.ids.reduce((result, flightId) => {\r\n        const chainFlight = flights.find(flight => flight.id === flightId)\r\n        if (chainFlight) {\r\n            const { dateTakeOff, dateLanding, cost, pay} = chainFlight\r\n            if (!result) {\r\n                return {\r\n                    id: newId,\r\n                    startDate: dateTakeOff.clone(),\r\n                    endDate: dateLanding.clone(),\r\n                    saldo: pay - cost,  \r\n                    tailId: chainFlight.tailId,                      \r\n                }\r\n            }\r\n            \r\n            if (result.startDate.isAfter(dateTakeOff)) {\r\n                result.startDate = dateTakeOff.clone()\r\n            }\r\n            if (result.endDate.isBefore(dateLanding)) {\r\n                result.endDate = dateLanding.clone()\r\n            }\r\n            return {...result,\r\n                saldo: result.saldo + pay - cost\r\n            } \r\n        }\r\n        return result\r\n    }, null)\r\n}","export const pageActionTypes = {\r\n    ADD_TAIL_IN_FLIGHT: '[Tail] add tail in flight',\r\n    INC_TIME: '[Time] increment time',\r\n    DEC_TIME: '[Time] decrement time',\r\n    SET_START_TIME: '[Time] set start time',\r\n    SET_CURRENT_TIME: '[Time] set current time',\r\n    GENERATE_ORDERS: '[Orders] generate orders',\r\n    ADD_ORDER: '[Order] add order to flight',\r\n    ADD_FLIGHT: '[Flight] add flight',\r\n    ADD_EMPTY_FLIGHT: '[Flight] add empty flight',\r\n    ADD_APPROACH_FLIGHT: '[Flight] add approach flight',\r\n    REMOVE_FLIGHT: '[Flight] remove flight',\r\n    CHECK_MONEY: '[Money] check money',\r\n    CREATE_FLIGHT_FROM_ORDER: '[Flight] create flight from order',\r\n    ADD_LICENCE: '[Licence] add licence',\r\n    ADD_TAIL: '[Tail] add tail',\r\n    ADD_ACHIEVEMENT: '[Achievement] add achievement',\r\n    CHECK_CANCELED: '[Flight] check canceled',\r\n  } ","\r\nimport { pageActionTypes } from '../constants/action-types'\r\n\r\nexport function decrementTime(value) {\r\n    return {\r\n        type: pageActionTypes.DEC_TIME,\r\n        payload: value,\r\n    }\r\n}\r\n\r\nexport function setStartTime() {\r\n    return {\r\n        type: pageActionTypes.SET_START_TIME,\r\n    }\r\n}\r\n\r\nexport function setCurrentTime() {\r\n    return {\r\n        type: pageActionTypes.SET_CURRENT_TIME,\r\n    }\r\n}\r\n\r\nexport function addTailInFlight(tailId, flightId) {\r\n    return {\r\n        type: pageActionTypes.ADD_TAIL_IN_FLIGHT,\r\n        payload: { tailId, flightId },\r\n    }\r\n}\r\n\r\nexport function addFlight(flight) {\r\n    return {\r\n        type: pageActionTypes.ADD_FLIGHT,\r\n        payload: { flight },\r\n    }\r\n}\r\n\r\nexport function addEmptyFlight(flightId) {\r\n    return {\r\n        type: pageActionTypes.ADD_EMPTY_FLIGHT,\r\n        payload: { flightId },\r\n    }\r\n}\r\n\r\nexport function removeFlight(flightId) {\r\n    return {\r\n        type: pageActionTypes.REMOVE_FLIGHT,\r\n        payload: { flightId }\r\n    }\r\n}\r\n\r\nexport function addApproachFlight(flight) {\r\n    return {\r\n        type: pageActionTypes.ADD_APPROACH_FLIGHT,\r\n        payload: { flight }\r\n    }\r\n}\r\n\r\nexport function incrementTime(value) {\r\n    return {\r\n        type: pageActionTypes.INC_TIME,\r\n        payload: value,\r\n    }\r\n}\r\n\r\nexport function generateOrders(maxTime, maxFlightId,\r\n    airports, airportDistances, fuelCost, isRequired) {\r\n    return {\r\n        type: pageActionTypes.GENERATE_ORDERS,\r\n        payload: {\r\n            maxTime, maxFlightId, airports,\r\n            airportDistances, fuelCost, isRequired\r\n        }\r\n    }\r\n}\r\n\r\nexport function addOrder(orderId, flightId) {\r\n    return {\r\n        type: pageActionTypes.ADD_ORDER,\r\n        payload: { orderId, flightId }\r\n    }\r\n}\r\n\r\nexport function createFlightFromOrder(orderId, newFlightId, tailId) {\r\n    return {\r\n        type: pageActionTypes.CREATE_FLIGHT_FROM_ORDER,\r\n        payload: { orderId, newFlightId, tailId }\r\n    }\r\n}\r\n\r\nexport function checkMoney(flights, tails, maxTime, currentTime) {\r\n    return {\r\n        type: pageActionTypes.CHECK_MONEY,\r\n        payload: { flights, tails, maxTime, currentTime }\r\n    }\r\n}\r\n\r\nexport function addLicence(licence) {\r\n    return {\r\n        type: pageActionTypes.ADD_LICENCE,\r\n        payload: { licence }\r\n    }\r\n}\r\n\r\nexport function addAchievement(achievementId) {\r\n    return {\r\n        type: pageActionTypes.ADD_ACHIEVEMENT,\r\n        payload: { achievementId }\r\n    }\r\n}\r\n\r\nexport function addTail(airportId, cost) {\r\n    return {\r\n        type: pageActionTypes.ADD_TAIL,\r\n        payload: { airportId, cost }\r\n    }\r\n}\r\n\r\nexport function checkCanceled(tails, orders, maxTime) {\r\n    return {\r\n        type: pageActionTypes.CHECK_CANCELED,\r\n        payload: { tails, orders, maxTime }\r\n    }\r\n}","import React  from 'react'\r\nimport PropTypes, { number, func } from 'prop-types'\r\nimport moment from 'moment'\r\nimport './TimelineView.scss'\r\n\r\nexport function TimelineView({ \r\n    currentTime, currentBudget,\r\n    incrementTime, decrementTime, \r\n    setCurrentTime, setStartTime, \r\n    startInterval, stopInterval, interval }) {\r\n\r\n    return (\r\n        <div className=\"timeline\">\r\n            <div className=\"timeline__current-time\">{currentTime.format('DD.MM.YY HH:mm')}</div>            \r\n            <div className=\"timeline__button\" onClick={() => incrementTime(1)}>+</div>\r\n            <div className=\"timeline__button hidden\" onClick={() => decrementTime(1)}>-</div>            \r\n            <div className=\"timeline__button\" onClick={() => setStartTime()}>|&lt;</div>\r\n            <div className={`timeline__button ${interval ? 'disabled' : ''}`} onClick={startInterval}>></div>\r\n            <div className={`timeline__button ${!interval ? 'disabled' : ''}`} onClick={stopInterval}>||</div>\r\n            <div className=\"timeline__button\" onClick={() => setCurrentTime()}>>|</div>\r\n            <div className=\"budget\">{currentBudget}<span className=\"currency-sign\">☼</span></div>\r\n        </div>        \r\n    )\r\n}\r\n\r\nTimelineView.propTypes = {\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    currentBudget: number,    \r\n    incrementTime: func,\r\n    decrementTime: func,\r\n    setCurrentTime: func,\r\n    setStartTime: func,\r\n    startInterval: func,\r\n    stopInterval: func,\r\n    interval: number,\r\n}\r\n\r\nexport default TimelineView","import React, { useState, useEffect }  from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { currentTimeSelector, currentBudgetSelector,\r\n    maxTimeSelector, filteredFlightsSelector, tailCoordinates } from '../../selectors/index'\r\nimport { incrementTime, decrementTime, \r\n    setCurrentTime, setStartTime, checkMoney } from '../../actions/pageActions'\r\nimport TimelineView from './TimelineView'\r\n\r\nexport function TimelineContainer({  \r\n    flights, tails, maxTime, currentTime, \r\n    incrementTime, decrementTime, currentBudget,\r\n    setCurrentTime, setStartTime, checkMoney }) {\r\n    const [didMount, setDidMount] = useState(false)\r\n\r\n    useEffect(() => {   \r\n        if (didMount) {\r\n            checkMoney(flights, tails, maxTime, currentTime)\r\n        } else {\r\n            setDidMount(true)\r\n        }        \r\n    }, [maxTime])\r\n    const [ interval, setIntervalConst ] = useState()\r\n\r\n    const startInterval = () => {\r\n        const i = setInterval(() => incrementTime(1), 1000)\r\n        setIntervalConst(i)\r\n    }\r\n    const stopInterval = () => {\r\n        clearInterval(interval)\r\n        setIntervalConst(null)\r\n    }\r\n\r\n    return (\r\n        <TimelineView \r\n            currentTime={currentTime}\r\n            currentBudget={currentBudget}\r\n            incrementTime={incrementTime}\r\n            decrementTime={decrementTime}\r\n            setCurrentTime={setCurrentTime}\r\n            setStartTime={setStartTime} \r\n            startInterval={startInterval}\r\n            stopInterval={stopInterval}\r\n            interval={interval}\r\n        />\r\n    )\r\n}\r\n\r\nTimelineContainer.propTypes = {\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    maxTime: PropTypes.instanceOf(moment),\r\n    flights:  PropTypes.arrayOf(PropTypes.shape({ \r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: PropTypes.object,\r\n        to: PropTypes.object,\r\n        fromIata: PropTypes.string,\r\n        toIata: PropTypes.string,\r\n        dateTakeOff: PropTypes.object,\r\n        dateLanding: PropTypes.object,\r\n        status: string,\r\n        linkedFlightId: number,\r\n    })),\r\n    tails: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            airportId: PropTypes.number,\r\n        })\r\n    ),\r\n    currentBudget: number,\r\n    incrementTime: PropTypes.func,\r\n    decrementTime: PropTypes.func,\r\n    setCurrentTime: PropTypes.func,\r\n    setStartTime: PropTypes.func,\r\n    checkMoney: PropTypes.func,\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        currentTime: currentTimeSelector(state),\r\n        currentBudget: currentBudgetSelector(state),\r\n        maxTime: maxTimeSelector(state),\r\n        flights: filteredFlightsSelector(state),\r\n        tails: tailCoordinates(state),\r\n    }),\r\n    { incrementTime, decrementTime, setCurrentTime, setStartTime, checkMoney }\r\n)(TimelineContainer)","export const ItemTypes = {\r\n  TAIL: 'tail',\r\n  ORDER: 'order',\r\n  SCHEDULE: 'schedule',\r\n};\r\n  ","import { useState } from 'react'\r\n\r\nexport default function useToggler(defaultExpanded = false) {\r\n    const [expanded, setExpanded] = useState(defaultExpanded)\r\n    const toggleExpanded = () => setExpanded(!expanded)\r\n\r\n    return { expanded, setExpanded, toggleExpanded}\r\n}","import React from 'react'\r\nimport { number } from 'prop-types'\r\nimport './ProgressBar.scss'\r\n\r\nexport function ProgressBar({progress}) {\r\n    return (\r\n    <div className=\"progressbar__container\">\r\n        <div style={{ left: -1 * (100 - progress) + '%', transition: 'left 1000ms ease-in'  }} className=\"progressbar__bar\"></div>\r\n    </div>)\r\n}\r\n\r\nProgressBar.propTypes = {\r\n    progress: number,\r\n}\r\n\r\nexport default ProgressBar","import React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport useToggler from '../../../common/custom-hooks/toogle-open'\r\nimport ProgressBar from './progress-bar/ProgressBar'\r\nimport { flightStatuses } from '../../../constants/flight-status'\r\nimport './FlightView.scss'\r\n\r\nexport function FlightView({ flight, isOver, canDrop, onRemove }) {\r\n    const { expanded, toggleExpanded } = useToggler(false)\r\n    const { id, name, from, to, progress, status, dateTakeOff, dateLanding, tail } = flight    \r\n\r\n    return (\r\n        <div className={`flight__container \r\n            ${isOver && canDrop ? 'enableDrop' : ''}\r\n            ${isOver && !canDrop ? 'disableDrop' : ''}\r\n            ${progress > 100 ? 'ended' : ''}\r\n            ${progress === -1 && status === flightStatuses.CANCELED ? 'canceled' : ''}`\r\n            }>\r\n            <div className=\"flight__header\">\r\n                <div className=\"flight__header__row\">\r\n                    <div className=\"flight__name\">{name}</div>\r\n                    <div  className=\"flight__control-buttons\">\r\n                        <div className=\"flight__expand-button\" onClick={toggleExpanded}>\r\n                            {expanded ? '-' : '+'}\r\n                        </div>\r\n                        <div className=\"flight__expand-button\" onClick={() => onRemove(id)}>x</div>\r\n                    </div>                    \r\n                </div>\r\n                <div className=\"flight__header__row left\">\r\n                    <div>{from.iata && to.iata ? `${from.iata} - ${to.iata}` : '' }</div>\r\n                    <div>{tail ? tail.name : null }</div>                    \r\n                </div>\r\n                <div className=\"small-font\">  \r\n                    <div>{dateTakeOff && dateLanding ? \r\n                        `${dateTakeOff.format('DD.MM HH:mm')} - ${dateLanding.format('DD.MM HH:mm')}` : ''}</div>\r\n                </div>                \r\n            </div>            \r\n            {getDetails(expanded, flight)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getDetails(expanded, flight) {\r\n    if (expanded) {\r\n        const {  status, progress, pay, cost, description } = flight\r\n        return (\r\n            <div>\r\n                <div>cost: {cost}</div>\r\n                <div>pay: {pay}</div>   \r\n                <div className=\"flight__description\">{description}</div>             \r\n                <div>{progress >= 0 ? Math.floor(progress) : null}</div>            \r\n                    <ProgressBar progress={progress}/>\r\n                <div>{status}</div>\r\n            </div>\r\n            )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\n\r\nFlightView.propTypes = {\r\n    flight: PropTypes.shape({ \r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: PropTypes.object,\r\n        to: PropTypes.object,\r\n        fromIata: PropTypes.string,\r\n        toIata: PropTypes.string,\r\n        dateTakeOff: PropTypes.object,\r\n        dateLanding: PropTypes.object,\r\n        status: string,\r\n        linkedFlightId: number,\r\n    }),\r\n    isOver: PropTypes.bool,\r\n    canDrop: PropTypes.bool,\r\n    onRemove: PropTypes.func,\r\n}\r\n\r\nexport default FlightView\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport { ItemTypes } from '../../../constants/item-types';\r\nimport { DropTarget } from 'react-dnd';\r\nimport { flightByIdSelector } from '../../../selectors/index'\r\nimport FlightView from './FlightView'\r\n\r\nconst flightTarget = {    \r\n\tcanDrop() {\r\n        return true\r\n\t},\r\n\r\n\tdrop(props) {\r\n        return { id: props.flight.id, type: ItemTypes.FLIGHT };\r\n    }\r\n}\r\n\r\nconst collect = (connect,monitor) => {\r\n\treturn {\r\n\t\tconnectDropTarget: connect.dropTarget(),\r\n\t\tisOver: !!monitor.isOver(),\r\n\t\tcanDrop: !!monitor.canDrop(),\r\n\t}\r\n}\r\n\r\nexport function FlightContainer({ flight, connectDropTarget, isOver, canDrop, onRemove }) {\r\n    return connectDropTarget(\r\n        <div>\r\n            <FlightView \r\n                flight={flight}\r\n                isOver={isOver}\r\n                canDrop={canDrop}\r\n                onRemove={onRemove}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nFlightContainer.propTypes = {\r\n    flight: PropTypes.shape({ \r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: PropTypes.object,\r\n        to: PropTypes.object,\r\n        fromIata: PropTypes.string,\r\n        toIata: PropTypes.string,\r\n        dateTakeOff: PropTypes.object,\r\n        dateLanding: PropTypes.object,\r\n        status: string,\r\n        linkedFlightId: number,\r\n    }),\r\n    connectDropTarget: PropTypes.func,\r\n    isOver: PropTypes.bool,\r\n    canDrop: PropTypes.bool,\r\n    onRemove: PropTypes.func,\r\n}\r\n\r\nexport default connect((state, ownProps) => ({\r\n    flight: flightByIdSelector(state, ownProps),\r\n}))(DropTarget([ItemTypes.TAIL, ItemTypes.ORDER], flightTarget, collect)(FlightContainer))","import { useState } from 'react'\r\nimport moment from 'moment'\r\nimport { dateType, getUpdatedDateAndCost } from '../../../../helpers/FlightHelper'\r\n\r\nexport const useAddFlightForm = (airportDistances, fuelCost, maxTime, maxFlightId, onSubmit, onCancel) => {\r\n    const defaultDateTakeOff = maxTime.utc().clone().add(1, 'hours')\r\n    const defaultFromId = 1\r\n    const defaultToId = 2\r\n    const { dateLanding: defaultDateLanding, cost } = \r\n    getUpdatedDateAndCost(defaultDateTakeOff, dateType.TAKE_OFF, defaultFromId, \r\n                defaultToId, fuelCost, airportDistances)\r\n    \r\n    const defaultInputs = {\r\n        cost,\r\n        id: maxFlightId + 1,\r\n        name: `Flight ${maxFlightId + 1}`,\r\n        dateTakeOff: defaultDateTakeOff.format('YYYY-MM-DDTHH:mm'),\r\n        dateLanding: defaultDateLanding.format('YYYY-MM-DDTHH:mm'),\r\n        fromId: 1,\r\n        toId: 11,\r\n    }\r\n    \r\n    const [inputs, setInputs] = useState(defaultInputs)\r\n\r\n    const hundleSubmit = (event) => {\r\n        if (event) {\r\n            event.preventDefault()\r\n        }\r\n        onSubmit({\r\n            id: inputs.id,\r\n            name: inputs.name,\r\n            tail: null,\r\n            tailId: null,\r\n            fromId: +inputs.fromId,\r\n            toId: +inputs.toId,\r\n            dateTakeOff: moment.utc(inputs.dateTakeOff),\r\n            dateLanding: moment.utc(inputs.dateLanding),       \r\n            status: 'planned',\r\n            progress: -1,\r\n            orderId: null,\r\n            cost: inputs.cost,\r\n            pay: 0,\r\n        })\r\n    }\r\n\r\n    const hundleCancel = () => {\r\n        onCancel()\r\n    }\r\n\r\n    const hundleMaxTimeChange = () => {\r\n        if (moment.utc(inputs.dateTakeOff).isBefore(maxTime)) {\r\n            const dateTakeOff = maxTime.utc().clone();\r\n            const { dateLanding, cost } = \r\n                getUpdatedDateAndCost(dateTakeOff, dateType.TAKE_OFF, inputs.fromId, inputs.toId, fuelCost, airportDistances)\r\n            setInputs(inputs => ({ ...inputs, cost, \r\n                dateTakeOff: dateTakeOff.format('YYYY-MM-DDTHH:mm'),\r\n                dateLanding: dateLanding.format('YYYY-MM-DDTHH:mm'), }))\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (event) => {  \r\n        const dateTakeOff = moment.utc(getInputValue(event.target, 'dateTakeOff', inputs))\r\n        const fromId =  getInputValue(event.target, 'fromId', inputs)\r\n        const toId = getInputValue(event.target, 'toId', inputs)\r\n        const { dateLanding, cost } = \r\n            getUpdatedDateAndCost(dateTakeOff, dateType.TAKE_OFF, fromId, toId, fuelCost, airportDistances)\r\n\r\n        setInputs(inputs => ({ ...inputs, fromId, toId, cost,\r\n            dateTakeOff:dateTakeOff.format('YYYY-MM-DDTHH:mm'), \r\n            dateLanding: dateLanding.format('YYYY-MM-DDTHH:mm')}))\r\n    }\r\n\r\n    const getInputValue = (target, name, inputs) => {\r\n        return target.name === name ? target.value : inputs[name]\r\n    }\r\n\r\n    return { inputs, hundleSubmit, hundleCancel, handleInputChange, hundleMaxTimeChange} \r\n}\r\n\r\nexport default useAddFlightForm","import React, { useEffect } from 'react'\r\nimport PropTypes, { func, number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport useAddFlightFrom from './custom-hooks/useAddFlightForm'\r\nimport './AddFlightPanel.scss'\r\n\r\nexport function AddFlightPanel({    \r\n    airports, airportDistances, fuelCost,\r\n    maxTime, maxFlightId, onSave, onCancel}) {\r\n    const {inputs, hundleSubmit, hundleCancel, handleInputChange, hundleMaxTimeChange} = \r\n        useAddFlightFrom(airportDistances, fuelCost, maxTime, maxFlightId, onSave, onCancel)\r\n    useEffect(() => {\r\n        hundleMaxTimeChange()\r\n    }, [maxTime])\r\n\r\n    const airportSelect = getAirportSelector(airports)\r\n\r\n    return (\r\n        <form className=\"flight__container\" onSubmit={hundleSubmit}>\r\n            <div className=\"new-flight__header\">\r\n                <div className=\"new-flight__header__row\">\r\n                    <div className=\"new-flight__name\">{inputs.name}</div>\r\n                </div>\r\n                <div className=\"new-flight__header__row\">\r\n                    <div className=\"new-flight__header__row right-offset\">\r\n                    <span className=\"new-flight__label right-offset__large\">from:</span> \r\n                    {airportSelect('fromId', inputs, handleInputChange)}\r\n                </div>\r\n                    <div className=\"new-flight__header__row right-offset\">\r\n                    <span className=\"new-flight__label\">to:</span>\r\n                    {airportSelect('toId', inputs, handleInputChange)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"new-flight__header__row\">\r\n                   <div className=\"new-flight__label\">takeOff: </div>                  \r\n                    <TextField\r\n                        id=\"datetime-local\"\r\n                        type=\"datetime-local\"                         \r\n                        InputProps={{ \r\n                            disableUnderline: true,\r\n                            style: {fontSize: 14} \r\n                        }}\r\n                        name=\"dateTakeOff\"\r\n                        value={inputs.dateTakeOff}\r\n                        onChange={handleInputChange}\r\n                    />                        \r\n                </div>                \r\n                <div className=\"new-flight__header__row\">\r\n                        <div className=\"new-flight__label\">landing:</div>\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            type=\"datetime-local\"\r\n                            className=\"date-input\"\r\n                            InputProps={{ \r\n                                disableUnderline: true,\r\n                                style: {fontSize: 14} \r\n                            }}\r\n                            name=\"dateLanding\"\r\n                            value={inputs.dateLanding}\r\n                            disabled\r\n                        />    \r\n                </div>\r\n                <div className=\"new-flight__header__row\">\r\n                    <div>\r\n                        <span className=\"new-flight__label\">cost: </span>\r\n                        <span className=\"new-flight__cost\">{inputs.cost}</span> \r\n                    </div>\r\n                </div>\r\n                <div className=\"new-flight__control-buttons\">\r\n                    <input type=\"button\" value=\"Cancel\" onClick={hundleCancel}/>\r\n                    <input type=\"submit\" value=\"Save\"/>\r\n                </div>                    \r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst getAirportSelector = (airports) => (type, inputs, handleInputChange) => {\r\n    const sortedAirports = [...airports].sort((a, b) => (a.iata < b.iata) ? -1: 1)\r\n    return (\r\n        <select className=\"airport-selector\" name={type} value={inputs[type]} onChange={handleInputChange}>\r\n            {sortedAirports.map(airport => <option value={airport.id} key={airport.id}>{airport.iata}</option>)}\r\n        </select>\r\n    )\r\n}\r\n\r\nAddFlightPanel.propTypes = {\r\n    airports: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            id: number,\r\n            name: string,\r\n            iata: string,\r\n            countriesId: number,\r\n            latt: number,\r\n            longt: number,\r\n            costOnHour: number,\r\n        })\r\n    ), \r\n    airportDistances: PropTypes.func,\r\n    maxTime: PropTypes.instanceOf(moment),\r\n    maxFlightId: number,\r\n    onSave: func,\r\n    onCancel: func,\r\n}\r\n\r\nexport default (AddFlightPanel)\r\n","import React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport FlightContainer from './flight/FlightContainer'\r\nimport AddFlightPanel from './add-flight-panel/AddFlightPanel'\r\nimport useToggler from '../../common/custom-hooks/toogle-open'\r\nimport './FlightListView.scss'\r\n\r\nexport function FlightListView({\r\n    flightIds, \r\n    airports,\r\n    maxFlightId,\r\n    maxTime, \r\n    airportDistances,\r\n    fuelCost,\r\n    addFlight,\r\n    addEmptyFlight,\r\n    removeFlight}) {      \r\n    const { expanded: isAddPanel, setExpanded: setIsAddPanel } = useToggler()\r\n    const onSave = (newFlight) => {\r\n        addFlight(newFlight)\r\n        setIsAddPanel(false)\r\n    }\r\n    const onCancel = () => {\r\n        setIsAddPanel(false)\r\n    }\r\n   \r\n    return (\r\n        <div className=\"flight-list-container\">\r\n            {getAddButtons(isAddPanel, maxFlightId, addEmptyFlight, setIsAddPanel)}\r\n            {getAddPanel(\r\n                    isAddPanel, \r\n                    airports,  \r\n                    maxFlightId, \r\n                    maxTime,\r\n                    fuelCost,\r\n                    airportDistances,\r\n                    onSave,\r\n                    onCancel\r\n                    )}\r\n            {getFlights(isAddPanel, flightIds, removeFlight)}     \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getAddButtons(isAddPanel, maxFlightId, addEmptyFlight, setIsAddPanel) {\r\n    if (!isAddPanel) {\r\n        return (\r\n            <div className=\"flight-list-container__add-buttons\">\r\n                <input className=\"add-button\" \r\n                        type=\"button\" \r\n                        value=\"Add empty\" \r\n                        onClick={() => addEmptyFlight(maxFlightId + 1)} />\r\n                    {!isAddPanel ? \r\n                        (<input className=\"add-button\" \r\n                                type=\"button\"\r\n                                value=\"Add custom flight\"\r\n                                onClick={() => setIsAddPanel(true)}/>) : ''}\r\n            </div>\r\n        ) \r\n    }\r\n    \r\n    return (<div></div>)\r\n}\r\n\r\nfunction getFlights(isAddPanel, flightIds, removeFlight) {\r\n    const flights = flightIds.map(value => (\r\n        <FlightContainer key={value} id={value} onRemove={(id) => removeFlight(id)}/>)\r\n    )\r\n\r\n    if (!isAddPanel) {\r\n        return (<div className=\"flight-list-container__flights\">\r\n        {flights}\r\n        </div>)\r\n    }\r\n    return (<div></div>)\r\n}\r\n\r\nfunction getAddPanel(isAddPanel, airports, maxFlightId, \r\n    maxTime, fuelCost, airportDistances, onSaveCallback, onCancelCallback) {\r\n    if (isAddPanel) {\r\n        return (\r\n            <div className=\"flight-list-container__add-panel\">\r\n                <AddFlightPanel \r\n                    airports={airports} \r\n                    maxFlightId={maxFlightId}\r\n                    maxTime={maxTime}\r\n                    onCancel={onCancelCallback}\r\n                    onSave={onSaveCallback} \r\n                    fuelCost={fuelCost}\r\n                    airportDistances={airportDistances}/>\r\n            </div>\r\n        )\r\n    } \r\n    return (<div></div>)\r\n}\r\n\r\nFlightListView.propTypes = {\r\n    flightIds: PropTypes.arrayOf(number),\r\n    airports: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            id: number,\r\n            name: string,\r\n            iata: string,\r\n            countriesId: number,\r\n            latt: number,\r\n            longt: number,\r\n            costOnHour: number,\r\n        })\r\n    ),\r\n    maxFlightId: number,\r\n    maxTime: PropTypes.instanceOf(moment),\r\n    airportDistances: PropTypes.func,\r\n    fuelCost: number,\r\n    addFlight: PropTypes.func,\r\n    addEmptyFlight: PropTypes.func,\r\n    removeFlight: PropTypes.func,\r\n}\r\n\r\nexport default FlightListView\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport { \r\n    maxTimeSelector, \r\n    licencedAirportsSelector, \r\n    fuelCostSelector,\r\n    distanceBetweenAirportsSelector,\r\n    filteredFlightIdsSelector,\r\n    maxFlightIdSelector,\r\n} from '../../selectors/index'\r\nimport { addFlight, addEmptyFlight, removeFlight } from '../../actions/pageActions'\r\nimport FlightListView from './FlightListView'\r\n\r\nexport function FlightListContainer({\r\n    flightIds, \r\n    airports,\r\n    maxFlightId,\r\n    maxTime, \r\n    airportDistances,\r\n    fuelCost,\r\n    addFlight,\r\n    addEmptyFlight,\r\n    removeFlight\r\n    }) { \r\n        return (\r\n            <FlightListView \r\n                flightIds={flightIds}\r\n                airports={airports}\r\n                maxFlightId={maxFlightId}\r\n                maxTime={maxTime}\r\n                airportDistances={airportDistances}\r\n                fuelCost={fuelCost}\r\n                addFlight={addFlight}\r\n                addEmptyFlight={addEmptyFlight}\r\n                removeFlight={removeFlight} />\r\n        )\r\n}\r\n\r\nFlightListContainer.propTypes = {\r\n    flightIds: PropTypes.arrayOf(number),\r\n    airports: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            id: number,\r\n            name: string,\r\n            iata: string,\r\n            countriesId: number,\r\n            latt: number,\r\n            longt: number,\r\n            costOnHour: number,\r\n        })\r\n    ),\r\n    maxFlightId: number,\r\n    maxTime: PropTypes.instanceOf(moment),\r\n    airportDistances: PropTypes.func,\r\n    fuelCost: number,\r\n    addFlight: PropTypes.func,\r\n    addEmptyFlight: PropTypes.func,\r\n    removeFlight: PropTypes.func,\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({        \r\n        flightIds: filteredFlightIdsSelector(state),\r\n        airports: licencedAirportsSelector(state),    \r\n        maxTime: maxTimeSelector(state),\r\n        airportDistances: distanceBetweenAirportsSelector(state),\r\n        fuelCost: fuelCostSelector(state),\r\n        maxFlightId: maxFlightIdSelector(state),\r\n    }),\r\n    { addFlight, addEmptyFlight, removeFlight }\r\n)(FlightListContainer)\r\n","import React from 'react';\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport './TailView.scss'\r\n\r\nexport function TailView({ tail }) {\r\n    const { id, name, airport } = tail\r\n    return (\r\n        <div className=\"tails__item\" id={id}>\r\n            <span className=\"tails__item__name\">{name}</span>\r\n            <span className=\"tails__item__airport\"> {airport ? airport.iata : ''} </span>            \r\n        </div>\r\n    )        \r\n}\r\n\r\nTailView.prototype = {\r\n    tail: PropTypes.shape({\r\n        id: number,\r\n        name: string, \r\n        airportId: number,\r\n        progress: number,\r\n    }),\r\n}\r\n\r\nexport default TailView;  ","import React from 'react';\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport { DragSource } from 'react-dnd';\r\nimport { ItemTypes } from '../../../constants/item-types';\r\nimport TailView from './TailView'\r\n\r\nconst tailSource = {\r\n    beginDrag(props) {\r\n        return {tailId: props.tail.id, type: ItemTypes.TAIL};\r\n    },\r\n    endDrag(props, monitor) {\r\n        if (monitor.getDropResult() && monitor.getDropResult().id) {\r\n            props.addTailAction(props.tail.id, monitor.getDropResult().id);\r\n        }\r\n    },\r\n};\r\n\r\nconst collect = (\r\n    connect,\r\n    monitor,\r\n) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging(),\r\n})\r\n\r\nexport function TailContainer({tail, connectDragSource}) {\r\n    return connectDragSource(\r\n        <div>\r\n            <TailView tail={tail}/>\r\n        </div>        \r\n    )\r\n}\r\n\r\nTailContainer.prototype = {\r\n    tail: PropTypes.shape({\r\n        id: number,\r\n        name: string, \r\n        airportId: number,\r\n        progress: number,\r\n    }),\r\n    connectDragSource: PropTypes.func,\r\n    addTailAction: PropTypes.func,\r\n}\r\n\r\nexport default DragSource(ItemTypes.TAIL, tailSource, collect)(TailContainer);  \r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TailContainer from './tail/TailContainer'\r\nimport './TailListView.scss'\r\n\r\nexport function TailListView({ tails, addTailInFlight }) {\r\n    const tailsArray = tails.map(tail => (\r\n        <TailContainer key={tail.id} tail={tail}\r\n            addTailAction={addTailInFlight}>\r\n        </TailContainer>\r\n    ))\r\n\r\n    return (\r\n        <div className=\"tails-container\">{tailsArray}</div>\r\n    )\r\n}\r\n\r\nTailListView.propTypes = {\r\n    tails: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            airportId: PropTypes.number,\r\n        })\r\n    ),\r\n    addTail: PropTypes.func\r\n}\r\n\r\nexport default TailListView","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { tailCoordinates } from '../../selectors/index'\r\nimport { addTailInFlight } from '../../actions/pageActions'\r\nimport TailListView from './TailListView'\r\n\r\nexport function TailListContainer({ tails, addTailInFlight }) {\r\n    return (\r\n        <TailListView \r\n            tails={tails}\r\n            addTailInFlight={addTailInFlight}/>\r\n    )\r\n}\r\n\r\nTailListContainer.propTypes = {\r\n    tails: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            airportId: PropTypes.number,\r\n        })\r\n    ),\r\n    addTail: PropTypes.func\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        tails: tailCoordinates(state)\r\n    }),\r\n    { addTailInFlight }\r\n)(TailListContainer)","import React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport useToggler from '../../../common/custom-hooks/toogle-open'\r\nimport './OrderView.scss'\r\n\r\n\r\nexport function OrderView({ order }) {\r\n    const { name, from, to, progress, dateTakeOff, dateLanding, pay, cost } = order\r\n    const { expanded, toggleExpanded } = useToggler(false)\r\n    \r\n    return (\r\n        <div className={`order__container ${progress > 100 ? 'ended' : ''}`}>\r\n            <div className=\"order__header\">\r\n                <div className=\"order__header__row\">\r\n                    <div className=\"order__name\">{name}</div>\r\n                    <div className=\"order__expand-button\" \r\n                        onClick={toggleExpanded}>{expanded ? '-' : '+'}</div>\r\n                </div>\r\n                <div className=\"order__header__row left\">\r\n                    <div>{from.iata} - {to.iata}</div>\r\n                </div>\r\n                <div className=\"order__header__row left\">\r\n                    <div>cost: {cost}, pay: {pay}</div>\r\n                </div>\r\n                <div className=\"small-font\">\r\n                    <div>{`${dateTakeOff.format('DD.MM HH:mm')} - \r\n                           ${dateLanding.format('DD.MM HH:mm')}`}</div>\r\n                </div>                \r\n            </div>            \r\n            {getDetails(expanded, order)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getDetails(expanded, order) {\r\n    return (expanded && order.description) ? \r\n        (<div className=\"order__description\">{order.description}</div>) : (<div></div>)\r\n}\r\n\r\nOrderView.propTypes = {\r\n    order: PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n    }),\r\n}\r\n\r\nexport default OrderView\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes, { number, string, func } from 'prop-types'\r\nimport { DragSource } from 'react-dnd'\r\nimport moment from 'moment'\r\nimport { ItemTypes } from '../../../constants/item-types'\r\nimport { orderByIdSelector } from '../../../selectors/index'\r\nimport OrderView from './OrderView'\r\n\r\nexport function OrderContainer({ order, connectDragSource }) {    \r\n    return connectDragSource(\r\n        <div>\r\n            <OrderView order={order}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nOrderView.propTypes = {\r\n    id: number,\r\n    order: PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n    }),\r\n    addOrder: func,    \r\n    maxFlightId: number,\r\n    createFlightFromOrder: func,\r\n    connectDragSource: func,     \r\n}\r\n\r\nconst orderSource = {\r\n    beginDrag(props) {\r\n        return {orderId: props.order.id, type: ItemTypes.ORDER };\r\n    },\r\n    endDrag(props, monitor) {\r\n        const dropResult = monitor.getDropResult()\r\n        if (dropResult && dropResult.type === ItemTypes.FLIGHT && dropResult.id) {\r\n            props.addOrder(props.order.id, monitor.getDropResult().id);\r\n        }\r\n\r\n        if (dropResult && dropResult.type === ItemTypes.SCHEDULE && dropResult.id) {\r\n            props.createFlightFromOrder(\r\n                props.order.id,\r\n                props.maxFlightId + 1,\r\n                monitor.getDropResult().id);\r\n        }\r\n    },\r\n};\r\n\r\nconst collect = (connect, monitor) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging(),\r\n})\r\n\r\nexport default connect(\r\n    (state, ownProps) => ({\r\n        order: orderByIdSelector(state, ownProps),\r\n    }),\r\n)(DragSource(ItemTypes.ORDER, orderSource, collect)(OrderContainer))\r\n\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes, { number } from 'prop-types'\r\nimport OrderContainer from './order/OrderContainer';\r\nimport './OrderListView.scss'\r\n\r\nexport function OrderListView({\r\n    orderIds, addOrder, createFlightFromOrder, \r\n    maxFlightId, selectedOrder}) {\r\n    \r\n    const scrollToRef = (ref) => {\r\n        if (ref && ref.current) {            \r\n            ref.current.scrollIntoView()\r\n        }        \r\n    }\r\n\r\n    useEffect(() => {  \r\n        if (selectedOrder) {\r\n            scrollToRef(orderRefs[selectedOrder])        \r\n        }\r\n    }, [selectedOrder])\r\n\r\n    const orderRefs = orderIds.reduce((result, id) => {\r\n        result[id] = React.createRef()\r\n        return result\r\n    }, {})\r\n    const orders = orderIds.map(value => (\r\n        <div ref={orderRefs[value]} key={value}>\r\n            <OrderContainer\r\n                id={value}\r\n                addOrder={addOrder}\r\n                maxFlightId={maxFlightId}                \r\n                createFlightFromOrder={createFlightFromOrder}/>\r\n        </div>\r\n        ))\r\n    return (\r\n        <div className=\"order-list-container\">{orders}</div>\r\n    )\r\n}\r\n\r\nOrderListView.propTypes = {\r\n    orderIds: PropTypes.arrayOf(number),\r\n    addOrder: PropTypes.func,\r\n    createFlightFromOrder: PropTypes.func,\r\n    maxFlightId: number,\r\n    selectedOrder: number,\r\n}\r\n\r\nexport default OrderListView\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { maxFlightIdSelector, maxTimeSelector,\r\n    airportsSelector, distanceBetweenAirportsSelector,\r\n    fuelCostSelector, licencedOrderIdsSelector,\r\n    maxOrderIdSelector, \r\n} from '../../selectors/index'\r\nimport { \r\n    addOrder,\r\n    createFlightFromOrder,\r\n    generateOrders \r\n} from '../../actions/pageActions'\r\nimport OrderListView from './OrderListView'\r\n\r\nexport function OrderListContainer({\r\n    orderIds, maxOrderId, maxTime, \r\n    generateOrders, airportDistances, \r\n    airports, addOrder, createFlightFromOrder, \r\n    maxFlightId, selectedOrder, fuelCost}) {\r\n    const [didMount, setDidMount] = useState(false)\r\n\r\n    useEffect(() => {                \r\n        generateOrders(maxTime, maxOrderId, airports, \r\n            airportDistances, fuelCost, !didMount)\r\n        setDidMount(true)\r\n    }, [maxTime])\r\n\r\n    return (\r\n        <OrderListView \r\n            orderIds={orderIds}\r\n            addOrder={addOrder}\r\n            createFlightFromOrder={createFlightFromOrder}\r\n            maxFlightId={maxFlightId}\r\n            selectedOrder={selectedOrder}\r\n        />\r\n    )\r\n}\r\n\r\nOrderListContainer.propTypes = {\r\n    orderIds: PropTypes.arrayOf(number),\r\n    maxOrderId: number,\r\n    maxTime: PropTypes.instanceOf(moment), \r\n    generateOrders: PropTypes.func,\r\n    airportDistances: PropTypes.func,\r\n    airports: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            id: number,\r\n            name: string,\r\n            iata: string,\r\n            countriesId: number,\r\n            latt: number,\r\n            longt: number,\r\n            costOnHour: number,\r\n        })\r\n    ),\r\n    addOrder: PropTypes.func,\r\n    createFlightFromOrder: PropTypes.func,\r\n    maxFlightId: number,\r\n    selectedOrder: number,\r\n    fuelCost: number,\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        orderIds: licencedOrderIdsSelector(state),\r\n        maxOrderId: maxOrderIdSelector(state),\r\n        maxTime: maxTimeSelector(state), \r\n        airports: airportsSelector(state),       \r\n        airportDistances: distanceBetweenAirportsSelector(state),\r\n        maxFlightId: maxFlightIdSelector(state),\r\n        fuelCost: fuelCostSelector(state),\r\n    }),\r\n    { generateOrders, addOrder, createFlightFromOrder }\r\n)(OrderListContainer)\r\n","import * as d3 from 'd3'\r\n\r\nexport function translateAlong(path) {\r\n    var pathLength = path.getTotalLength();\r\n    return (_) => {\r\n        return (t) => {\r\n            var currentPoint = path.getPointAtLength(t * pathLength);\r\n            var prevPoint = path.getPointAtLength(((t < 0.9 ? t : 0.9) - 0.1) * pathLength);\r\n            const angle = Math.atan2(currentPoint.y - prevPoint.y, currentPoint.x - prevPoint.x) * 180 / Math.PI;\r\n            \r\n            return `rotate(${angle} ${currentPoint.x} ${currentPoint.y}) \r\n                translate(${currentPoint.x - 15}, ${currentPoint.y - 15})`;\r\n        };\r\n    };\r\n}\r\n\r\nexport function translateAlongRoute(path) {\r\n    return (_) => {\r\n        return (t) => {\r\n            const { currentPoint, prevPoint, angle } = getPointsAndAngle(t, path)\r\n            \r\n            return (t === 0) ? `rotate(${angle} ${prevPoint.x} ${prevPoint.y}) \r\n                    translate(${prevPoint.x - 15}, ${prevPoint.y - 15})` :\r\n                `rotate(${angle} ${currentPoint.x} ${currentPoint.y}) \r\n                    translate(${currentPoint.x - 15}, ${currentPoint.y - 15})`;\r\n        };\r\n    };\r\n}\r\n\r\nexport function getPointsAndAngle(t, path) {\r\n    const pathLength = path.getTotalLength();\r\n    let currentPoint\r\n    let prevPoint\r\n    let angle\r\n\r\n    if (t === 0) {\r\n        currentPoint = path.getPointAtLength((t + 1) * pathLength)\r\n        prevPoint = path.getPointAtLength(t * pathLength)\r\n        angle = Math.atan2(currentPoint.y - prevPoint.y, currentPoint.x - prevPoint.x) * 180 / Math.PI;\r\n    } else {\r\n        currentPoint = path.getPointAtLength(t * pathLength)\r\n        prevPoint = path.getPointAtLength(((t < 0.9 ? t : 0.9) - 0.1) * pathLength)\r\n        angle = Math.atan2(currentPoint.y - prevPoint.y, currentPoint.x - prevPoint.x) * 180 / Math.PI;\r\n    }\r\n    \r\n    return { currentPoint, prevPoint, angle }\r\n}\r\n\r\nexport function getPointsOnFlight(flightLine, flight) {\r\n    const pathLength = flightLine.getTotalLength()\r\n\r\n    const currentPosition = flightLine.getPointAtLength(flight.progress / 100 * pathLength)\r\n    const prevPosition = flightLine.getPointAtLength(flight.prevProgress / 100 * pathLength)\r\n    const nextPosition = flightLine.getPointAtLength(flight.progress + 1 / 100 * pathLength)\r\n    const endPosition = flightLine.getPointAtLength(pathLength)\r\n\r\n    const angle = Math.atan2(\r\n        currentPosition.y - nextPosition.y, \r\n        currentPosition.x - nextPosition.x) * 180 / Math.PI;\r\n\r\n    return { currentPosition, prevPosition, nextPosition, endPosition, angle }\r\n}\r\n\r\n\r\nexport function processAircraftPoint(currentPath, aircraft, aircraftImage) {\r\n    if (!currentPath.empty()) {\r\n        if ((aircraft.progress === 0 && aircraft.prevProgress === 0)) {\r\n            const { prevPoint, angle } = getPointsAndAngle(0, currentPath.node())                    \r\n            d3.select(aircraftImage)\r\n              .attr('transform', `rotate(${angle} ${prevPoint.x} ${prevPoint.y}) \r\n                        translate(${prevPoint.x - 15}, ${prevPoint.y - 15})`)\r\n        } else if (aircraft.progress === 100) {\r\n            d3.select(aircraftImage)\r\n              .transition()\r\n              .duration(1000)\r\n              .ease(d3.easeLinear)\r\n              .attrTween('transform', currentPath ? translateAlongRoute(currentPath.node()) : null)\r\n        } else {\r\n            d3.select(aircraftImage)\r\n              .transition()\r\n              .duration(1000)\r\n              .ease(d3.easeLinear)\r\n              .attrTween('transform', currentPath ? translateAlongRoute(currentPath.node()) : null)\r\n        }\r\n    } else {\r\n        d3.select(aircraftImage)\r\n          .attr('x', 0)\r\n          .attr('y', 0)\r\n          .attr('transform', d => `rotate(${-90} ${d.coordinates[0]} ${d.coordinates[1]}) \r\n            translate(${d.coordinates[0] - 15}, ${d.coordinates[1] - 15})`)\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport * as d3 from 'd3'\r\nimport './MapView.scss'\r\nimport { processAircraftPoint, getPointsOnFlight } from '../../helpers/MapHelper'\r\nimport { flightDateSortPredicat } from '../../helpers/FlightHelper'\r\nimport aircraftIconRed from '../../assets/aircraft-icon__red.svg'\r\nimport aircraftIconGray from '../../assets/aircraft-icon__gray.svg'\r\nconst width = 1100\r\nconst height = 550\r\n\r\nconst ACTIVE_COUNTRY_COLOR = 'white'\r\nconst ACTIVE_COUNTRY_BORDER = 'gray'\r\nconst ACTIVE_AIRPORT_FILL = '#dfc16d'\r\nconst INACTIVE_COUNTTRY_BORDER = '#9bacac'\r\nconst INACTIVE_COUNTRY_COLOR = '#9bacac'\r\nconst INACTIVE_AIRPORT_FILL = '#9bacac'\r\n\r\nconst CURRENT_PATH_PREFIX = 'current-path-'\r\nconst PATH_PREFIX = 'path-'\r\n\r\nexport function MapView({ flights, orders, tails, airports,\r\n    regionIds, countries, onOrderClick, isShowPlaned }) {\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    const [svg, setSvg] = useState()\r\n\r\n    const projection = d3.geoEquirectangular()\r\n        .scale(180)\r\n        .translate([width / 2, height / 2])\r\n    const path = d3.geoPath().projection(projection)\r\n    const licencedAirports = airports.filter(airport => regionIds.includes(airport.regionId))\r\n\r\n    useEffect(() => {\r\n        if (countries && !isLoaded) {\r\n            init(path, countries, regionIds, projection, licencedAirports,\r\n                flights, orders, tails, setIsLoaded, setSvg, onOrderClick, isShowPlaned)\r\n        }\r\n    }, [countries])\r\n    useEffect(() => {\r\n        if (isLoaded) {\r\n            updateRoutes(svg, path, flights, orders, onOrderClick, isShowPlaned)\r\n            updateAircrafts(svg, path, projection, tails, flights)\r\n        }\r\n    }, [flights])\r\n\r\n    return (<>\r\n        <div className={`map__loader ${!isLoaded ? 'loading' : 'loaded'}`}>...</div>\r\n        <svg id=\"mapa\" className={`map__container ${!isLoaded ? 'loading' : 'loaded'}`}></svg>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction showMapBackground(svg, path, data, regionIds) {\r\n    svg.append('g')\r\n        .attr('class', 'countries')\r\n        .selectAll('path')\r\n        .data(data.features)\r\n        .enter()\r\n        .append('path')\r\n        .attr('d', path)\r\n        .style('stroke', d => regionIds.includes(d.properties.regionId) ?\r\n            ACTIVE_COUNTRY_BORDER : INACTIVE_COUNTTRY_BORDER)\r\n        .style('stroke-width', 0.5)\r\n        .style('fill', d => regionIds.includes(d.properties.regionId) ?\r\n            ACTIVE_COUNTRY_COLOR : INACTIVE_COUNTRY_COLOR)\r\n}\r\n\r\nfunction init(path, countries, regionIds, projection, licencedAirports,\r\n    flights, orders, tails, setIsLoaded, setSvg, onOrderClick, isShowPlaned) {\r\n    const svg = d3.select('#mapa')\r\n        .attr('width', width)\r\n        .attr('height', height)\r\n    showMapBackground(svg, path, countries, regionIds)\r\n    updateRoutes(svg, path, flights, orders, onOrderClick, isShowPlaned)\r\n    initAirports(svg, projection, licencedAirports, regionIds)\r\n    initAircraft(svg, projection, tails, flights)\r\n    setIsLoaded(true)\r\n    setSvg(svg)\r\n}\r\n\r\nfunction updateRoutes(svg, path, flights, orders, onOrderClick, isShowPlaned) {\r\n    const currentFlights = flights.filter(value => 0 <= value.progress && value.progress <= 100)\r\n    const lines = currentFlights.map(flight => getFlightLine(flight))\r\n\r\n    if (svg.select('.routes').empty()) {\r\n        svg.append('g')\r\n            .attr('class', 'routes')\r\n    } else {\r\n        svg.select('.routes').select('.routes__lines').remove()\r\n        svg.select('.routes__paths').remove()\r\n        svg.select('.routes').select('.orders__lines').remove()\r\n        svg.select('.routes').select('.routes__airports').remove()\r\n    }\r\n\r\n    svg.select('.routes')\r\n        .append('g')\r\n        .attr('class', 'routes__lines')\r\n        .selectAll('path')\r\n        .data(lines)\r\n        .enter()\r\n        .append('path')\r\n        .attr('id', d => `${PATH_PREFIX}${d.id}`)\r\n        .attr('class', 'line')\r\n        .attr('d', path)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', 'black')\r\n\r\n    svg.select('.routes__lines')\r\n        .selectAll('path')\r\n        .nodes()\r\n        .forEach((path) => {\r\n            const length = path.getTotalLength()\r\n            d3.select(path)\r\n                .attr('stroke-dasharray', length)\r\n                .attr('stroke-dashoffset', d => d.new ? length : 0)\r\n                .transition()\r\n                .duration(1000)\r\n                .attr('stroke-dashoffset', 0)\r\n        })\r\n\r\n    if (isShowPlaned) {\r\n        showPlanedFlights(svg, path, orders, onOrderClick)\r\n    }\r\n}\r\n\r\nfunction initAirports(svg, projection, airports, regionIds) {\r\n    svg.append('g')\r\n        .attr('class', 'routes__airports')\r\n        .selectAll('circle')\r\n        .data(airports)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('cx', d => projection([d.longt, d.latt])[0])\r\n        .attr('cy', d => projection([d.logt, d.latt])[1])\r\n        .attr('r', '6px')\r\n        .attr('fill', d => regionIds.includes(d.regionId) ?\r\n            ACTIVE_AIRPORT_FILL : INACTIVE_AIRPORT_FILL)\r\n        .attr('stroke', 'black')\r\n\r\n    svg.select('.routes__airports')\r\n        .selectAll('text')\r\n        .data(Object.values(airports))\r\n        .enter()\r\n        .append('text')\r\n        .attr('x', d => projection([d.longt, d.latt])[0] + 1)\r\n        .attr('y', d => projection([d.longt, d.latt])[1] + 25)\r\n        .attr('text-anchor', 'middle')\r\n        .style('fill', 'black')\r\n        .style('font-size', '14px')\r\n        .text(d => d.iata)\r\n}\r\n\r\nfunction initAircraft(svg, projection, tails, flights) {\r\n    const aircrafts = getAircraftsDetails(svg, projection, flights, tails)\r\n\r\n    svg.append('g')\r\n        .attr('class', 'routes__aircraft')\r\n        .selectAll('image')\r\n        .data(aircrafts)\r\n        .enter()\r\n        .append('image')\r\n        .attr('id', d => d.id)\r\n        .attr('xlink:href', d => d.onFlight ? aircraftIconRed : aircraftIconGray)\r\n        .attr('width', 30)\r\n        .attr('height', 30)\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('transform', d => `rotate(${d.angle}, ${d.coordinates[0]}, ${d.coordinates[1]})\r\n            translate(${d.coordinates[0] - 15}, ${d.coordinates[1] - 15})`)\r\n        \r\n    svg.select('.routes__aircraft')\r\n        .selectAll('text')\r\n        .data(aircrafts)\r\n        .enter()\r\n        .append('text')\r\n        .attr('x', d => d.coordinates[0])\r\n        .attr('y', d => d.coordinates[1] - 25)\r\n        .attr('text-anchor', 'middle')\r\n        .style('fill', 'black')\r\n        .text(d => d.name)\r\n}\r\n\r\nfunction updateAircrafts(svg, path, projection, tails, flights) {\r\n    const aircrafts = getAircraftsDetails(svg, projection, flights, tails)\r\n\r\n    svg.append('g')\r\n       .attr('class', 'routes__paths')\r\n       .selectAll('path')\r\n       .data(aircrafts\r\n            .filter(aircraft => aircraft.currentPathObject)\r\n            .map(aircraft => aircraft.currentPathObject))\r\n       .enter()\r\n       .append('path')\r\n       .attr('id', d => `${CURRENT_PATH_PREFIX}${d.id}`)\r\n       .attr('d', path)\r\n       .attr('fill', 'none')\r\n\r\n    svg.select('.routes__aircraft')\r\n       .selectAll('image')\r\n       .data(aircrafts)\r\n       .attr('xlink:href', d => d.onFlight ? aircraftIconRed : aircraftIconGray)\r\n       .nodes()\r\n       .forEach((aircraftImage) => {\r\n            const id = +aircraftImage.id\r\n            const aircraft = aircrafts.find(aircraft => aircraft.id === +aircraftImage.id)\r\n            \r\n            const currentPath = svg.select('.routes__paths').select(`#${CURRENT_PATH_PREFIX}${id}`)\r\n            processAircraftPoint(currentPath, aircraft, aircraftImage)            \r\n        })\r\n\r\n    svg.select('.routes__aircraft')\r\n        .selectAll('text')\r\n        .data(aircrafts)\r\n        .transition()\r\n        .duration(d => d.onFlight && d.onFlight && !d.changeState ? 1000 : 0)\r\n        .ease(d3.easeLinear)\r\n        .attr('x', d => d.coordinates[0])\r\n        .attr('y', d => d.coordinates[1] - 25)\r\n        .attr('text-anchor', 'middle')\r\n        .style('fill', 'black')\r\n        .text(d => d.name)\r\n}\r\n\r\nfunction getFlightLine(flight) {\r\n    return (flight.from && flight.to) ? {\r\n        type: 'LineString', 'id': flight.id,\r\n            'coordinates': [[flight.from.longt, flight.from.latt],\r\n                [flight.to.longt, flight.to.latt]], 'new': flight.mapAction === 'add_flight'\r\n    } : {}\r\n}\r\n\r\nfunction showPlanedFlights(svg, path, orders, onOrderClick) {\r\n    const orderLines = orders.map(order => getFlightLine(order))\r\n        svg.select('.routes')\r\n            .append('g')\r\n            .attr('class', 'orders__lines')\r\n            .selectAll('path')\r\n            .data(orderLines)\r\n            .enter()\r\n            .append('path')\r\n            .attr('id', d => `order ${d.id}`)\r\n            .attr('class', 'order-line')\r\n            .attr('d', path)\r\n            .attr('fill', 'none')\r\n            .attr('stroke', 'slategrey')\r\n            .attr('stroke-width', 2)\r\n            .attr('stroke-dasharray', 10)\r\n            .style('cursor', 'pointer')\r\n            .on('click', d => onOrderClick(d.id))\r\n}\r\n\r\nfunction getInvertSVGPointCoordinate(projection, point) {\r\n    return projection.invert([point.x, point.y])\r\n}\r\n\r\nfunction getAircraftsDetails(svg, projection, flights, tails) {\r\n    const sortedFlights = [...flights]\r\n        .filter(flight => flight.progress !== 101)\r\n        .sort(flightDateSortPredicat)\r\n    return tails.map(tail => {        \r\n        const linkedFlights = sortedFlights.filter(flight => flight.tailId === tail.id)\r\n        const linkedFlight = (linkedFlights && linkedFlights.length > 0) ? linkedFlights[0] : null\r\n        if (linkedFlights && linkedFlights.length > 0 && \r\n            linkedFlight.progress > -1 && linkedFlight.progress < 101) {\r\n            const linkedPath = \r\n                svg.selectAll('.routes')\r\n                .selectAll('.routes__lines')\r\n                .select(`#${PATH_PREFIX}${linkedFlight.id}`)\r\n                .node()\r\n\r\n            const { currentPosition, prevPosition, endPosition, angle } = \r\n                getPointsOnFlight(linkedPath, linkedFlight)\r\n            const changeState = (linkedFlight.progress === 100 || linkedFlight.progress === 0)\r\n            const currentPathCoordinates = linkedFlight.progress === 0 ? [\r\n                getInvertSVGPointCoordinate(projection, prevPosition),\r\n                getInvertSVGPointCoordinate(projection, endPosition)\r\n            ] : [\r\n                getInvertSVGPointCoordinate(projection, prevPosition),\r\n                getInvertSVGPointCoordinate(projection, currentPosition)\r\n            ]\r\n            \r\n            const currentPathObject = { type: 'LineString', 'id': linkedFlight.tail.id, 'coordinates': currentPathCoordinates}\r\n\r\n            return {\r\n                changeState,\r\n                currentPathObject,\r\n                angle,\r\n                id: linkedFlight.tailId,\r\n                name: linkedFlight.tail.name,\r\n                progress: linkedFlight.progress,\r\n                prevProgress: linkedFlight.prevProgress,\r\n                coordinates: [currentPosition.x, currentPosition.y],\r\n                onFlight: true\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...tail, \r\n            coordinates: projection(tail.coordinates),\r\n            onFlight: false,\r\n            angle: -90, \r\n            changeState: true,\r\n            name: tail.name,\r\n        }\r\n    })\r\n}\r\n\r\nMapView.propTypes = {\r\n    flights: PropTypes.arrayOf(PropTypes.shape({ \r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: PropTypes.object,\r\n        to: PropTypes.object,\r\n        fromIata: PropTypes.string,\r\n        toIata: PropTypes.string,\r\n        dateTakeOff: PropTypes.object,\r\n        dateLanding: PropTypes.object,\r\n        status: string,\r\n        linkedFlightId: number,\r\n    })),\r\n    orders: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n        description: string,\r\n    })),\r\n    tails: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            airportId: PropTypes.number,\r\n        })\r\n    ),\r\n    airports: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            id: number,\r\n            name: string,\r\n            iata: string,\r\n            countriesId: number,\r\n            latt: number,\r\n            longt: number,\r\n            costOnHour: number,\r\n        })\r\n    ),\r\n    regionIds: PropTypes.arrayOf(number),\r\n    countries: PropTypes.object,\r\n    onOrderClick: PropTypes.func,\r\n    isShowPlaned: PropTypes.bool,\r\n}\r\n\r\nexport default MapView\r\n","import React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport { filteredFlightsSelector, tailCoordinates,\r\n    airportsSelector, licencedRegionsIdsSelector,\r\n    ordersToScheduleSelector, currentTimeSelector,\r\n    maxTimeSelector } from '../../selectors/index'\r\nimport MapView from './MapView'\r\n\r\nexport function MapContainer({ currentTime, maxTime, flights, orders, tails,\r\n    airports, regionIds, countries, onOrderClick }) {\r\n    const hundleOrderClick = (id) => {\r\n        onOrderClick(id)\r\n    }\r\n    \r\n    return (\r\n        <MapView \r\n            currentTime={currentTime}\r\n            flights={flights} \r\n            isShowPlaned={currentTime.isSame(maxTime)}\r\n            orders={orders}\r\n            tails={tails}\r\n            onOrderClick={hundleOrderClick}\r\n            airports={airports}\r\n            countries={countries}\r\n            regionIds={regionIds}/>\r\n    )\r\n}\r\n\r\nMapContainer.propTypes = {\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    maxTime: PropTypes.instanceOf(moment),\r\n    flights: PropTypes.arrayOf(PropTypes.shape({ \r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: PropTypes.object,\r\n        to: PropTypes.object,\r\n        fromIata: PropTypes.string,\r\n        toIata: PropTypes.string,\r\n        dateTakeOff: PropTypes.object,\r\n        dateLanding: PropTypes.object,\r\n        status: string,\r\n        linkedFlightId: number,\r\n    })),\r\n    orders: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n        description: string,\r\n    })),\r\n    tails: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            airportId: PropTypes.number,\r\n        })\r\n    ),\r\n    airports: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            id: number,\r\n            name: string,\r\n            iata: string,\r\n            countriesId: number,\r\n            latt: number,\r\n            longt: number,\r\n            costOnHour: number,\r\n        })\r\n    ),\r\n    regionIds: PropTypes.arrayOf(number),\r\n    countries: PropTypes.object,\r\n    onOrderClick: PropTypes.func,\r\n}\r\n\r\nexport default connect((state) => ({\r\n    currentTime: currentTimeSelector(state),\r\n    maxTime: maxTimeSelector(state),\r\n    tails: tailCoordinates(state),\r\n    flights: filteredFlightsSelector(state),\r\n    airports: airportsSelector(state),\r\n    regionIds: licencedRegionsIdsSelector(state),\r\n    orders: ordersToScheduleSelector(state),\r\n}))(MapContainer)\r\n\r\n","import React from 'react'\r\nimport PropTypes, { number, string, object } from 'prop-types'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport moment from 'moment'\r\nimport { getCellProperties } from '../../../../helpers/ScheduleHelper'\r\nimport { flightStatuses } from '../../../../constants/flight-status'\r\nimport './FlightCell.scss'\r\n\r\nexport function FlightCell({ flight, cellWidthScale, currentTime, timelineOffsetHours, addApproachFlight, blankApproachFlight}) {\r\n    const { leftOffset, cellWidth } = \r\n        getCellProperties(cellWidthScale, timelineOffsetHours, currentTime, flight.dateTakeOff, flight.dateLanding)\r\n\r\n    return (\r\n        <div className={`order-flight-cell\r\n                 ${flight.progress > 0 ? 'inactive' : ''} \r\n                 ${(flight.progress === -1 && flight.status === flightStatuses.CANCELED) ? 'canceled' : ''}`}\r\n            style={{left: leftOffset, width: cellWidth}}>                \r\n            <div className=\"order-flight-cell__add-approach-flight\"\r\n                    onClick={() => addApproachFlight(blankApproachFlight(flight.id))}>&lt;</div>\r\n            <div className=\"order-flight-cell__content\">\r\n                <Tooltip disableFocusListener title={`${flight.name} ${flight.from.iata} - ${flight.to.iata}`} placement=\"top\">\r\n                    <span className=\"order-flight-cell__label\" >{flight.name}</span>                \r\n                </Tooltip>\r\n                <span className=\"order-flight-cell__airports\" >{`${flight.from.iata} - ${flight.to.iata}`}</span>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nFlightCell.propTypes = {\r\n    flight:PropTypes.shape({\r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: object,\r\n        to: object,\r\n        fromIata: string,\r\n        toIata: string,\r\n        dateTakeOff: object,\r\n        dateLanding: object,\r\n        status: string,\r\n        linkedFlightId: number,\r\n    }),\r\n    cellWidthScale: number,\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    addApproachFlight: PropTypes.func,\r\n    blankApproachFlight: PropTypes.func,\r\n}\r\n\r\nexport default FlightCell\r\n","import React from 'react'\r\nimport PropTypes, { number, string, object } from 'prop-types'\r\nimport moment from 'moment'\r\nimport { getCellProperties } from '../../../../helpers/ScheduleHelper'\r\nimport './BudgetCell.scss'\r\n\r\nexport function BudgetCell({\r\n    chainElement, cellWidthScale,\r\n    timelineOffsetHours, currentTime }) {\r\n    const { leftOffset, cellWidth } = \r\n        getCellProperties(cellWidthScale, timelineOffsetHours, currentTime, chainElement.startDate, chainElement.endDate) \r\n    return (\r\n        <div className=\"chain-budget-cell\"\r\n                style={{left: leftOffset, width: cellWidth}}>{chainElement.saldo} ☼</div>\r\n    ) \r\n}\r\n\r\nBudgetCell.prototype = {\r\n    budgetChain: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            ids: PropTypes.arrayOf(number),\r\n            tailId: number,\r\n        })\r\n    ),\r\n    flights: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: object,\r\n        to: object,\r\n        fromIata: string,\r\n        toIata: string,\r\n        dateTakeOff: object,\r\n        dateLanding: object,\r\n        status: string\r\n    })),\r\n    cellWidthScale: number,\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    timelineOffsetHours: number,\r\n}\r\n\r\nexport default BudgetCell","import React from 'react'\r\nimport PropTypes, { number, string, object } from 'prop-types'\r\nimport moment from 'moment'\r\nimport FlightCell from './flightCell/FlightCell'\r\nimport BudgetCell from './budgetCell/BudgetCell'\r\nimport './ScheduleRowView.scss'\r\n\r\nexport function ScheduleRowView({\r\n    tail, flights, cellWidthScale, currentTime, \r\n    budgetChains, timelineOffsetHours, \r\n    addApproachFlight, blankApproachFlight,\r\n    isLast, isOver, canDrop, leftOffset }) {\r\n    \r\n    const tailBudgetChains = budgetChains.filter(budgetChain => budgetChain.tailId === tail.id)\r\n    const budgetChainRows = tailBudgetChains.map((chainElement) => {\r\n         return (\r\n            <BudgetCell\r\n                key={`budget${chainElement.id}`} \r\n                flights={flights}\r\n                chainElement={chainElement}\r\n                cellWidthScale={cellWidthScale}\r\n                currentTime={currentTime}\r\n                timelineOffsetHours={timelineOffsetHours}\r\n            />)\r\n    }) \r\n\r\n    const flightCels = flights.filter(flight => flight.tailId === tail.id).map(flight => {\r\n        return (<FlightCell \r\n                    key={`flight${flight.id}`}\r\n                    flight={flight}\r\n                    cellWidthScale={cellWidthScale}\r\n                    currentTime={currentTime}\r\n                    timelineOffsetHours={timelineOffsetHours}\r\n                    addApproachFlight={addApproachFlight}\r\n                    blankApproachFlight={blankApproachFlight}\r\n        />)\r\n    })        \r\n    return (\r\n        <div key={`tail${tail.id}`} \r\n            className={`schedule__row \r\n                ${ isLast ? 'last' : ''}\r\n                ${isOver && canDrop ? 'enableDrop' : ''}\r\n                ${isOver && !canDrop ? 'disableDrop' : ''} \r\n            `}>\r\n            {flightCels}\r\n            {budgetChainRows}\r\n            <div className=\"tail-name\">{`${tail.name} ${tail.airport ? tail.airport.iata : ''}`}</div>\r\n            <div className=\"schedule__timeline\" style={{left: `${leftOffset}px`}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nScheduleRowView.propTypes = {\r\n    tail: PropTypes.shape({\r\n        airportId:number,\r\n        id: number,\r\n        name: string,\r\n        progress: number,\r\n    }),\r\n    flights: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: object,\r\n        to: object,\r\n        fromIata: string,\r\n        toIata: string,\r\n        dateTakeOff: object,\r\n        dateLanding: object,\r\n        status: string\r\n    })),\r\n    cellWidthScale: number,\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    timelineOffsetHours: number,\r\n    addApproachFlight: PropTypes.func,\r\n    blankApproachFlight: PropTypes.func,\r\n    isLast: PropTypes.bool,\r\n    isOver: PropTypes.bool,\r\n    canDrop: PropTypes.bool,\r\n    leftOffset: number,\r\n}\r\n\r\nexport default ScheduleRowView","import React from 'react'\r\nimport PropTypes, { number, string, object } from 'prop-types'\r\nimport moment from 'moment'\r\nimport { DropTarget } from 'react-dnd';\r\nimport { ItemTypes } from '../../../constants/item-types';\r\nimport ScheduleRowView from './ScheduleRowView'\r\n\r\nexport function ScheduleRowContainer({\r\n    tail, flights, cellWidthScale, currentTime, \r\n    budgetChains, timelineOffsetHours, \r\n    addApproachFlight, blankApproachFlight,\r\n    connectDropTarget, isLast, isOver, canDrop, leftOffset }) {\r\n    return connectDropTarget(\r\n        <div className=\"schedule__drop-container\">\r\n            <ScheduleRowView \r\n                tail={tail}\r\n                flights={flights}\r\n                cellWidthScale={cellWidthScale}\r\n                currentTime={currentTime}\r\n                budgetChains={budgetChains}\r\n                timelineOffsetHours={timelineOffsetHours}\r\n                addApproachFlight={addApproachFlight}\r\n                blankApproachFlight={blankApproachFlight}\r\n                isLast={isLast}\r\n                isOver={isOver}\r\n                canDrop={canDrop}\r\n                leftOffset={leftOffset}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nScheduleRowContainer.propTypes = {\r\n    tail: PropTypes.shape({\r\n        airportId:number,\r\n        id: number,\r\n        name: string,\r\n        progress: number,\r\n    }),\r\n    flights: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: object,\r\n        to: object,\r\n        fromIata: string,\r\n        toIata: string,\r\n        dateTakeOff: object,\r\n        dateLanding: object,\r\n        status: string\r\n    })),\r\n    cellWidthScale: number,\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    timelineOffsetHours: number,\r\n    addApproachFlight: PropTypes.func,\r\n    blankApproachFlight: PropTypes.func,\r\n    connectDropTarget: PropTypes.func,\r\n    isLast: PropTypes.bool,\r\n    isOver: PropTypes.bool,\r\n    canDrop: PropTypes.bool,\r\n    leftOffset: number,\r\n}\r\n\r\nconst rowTarget = {    \r\n\tcanDrop() {\r\n        return true\r\n\t},\r\n\r\n\tdrop(props) {\r\n        return { id: props.tail.id, type: ItemTypes.SCHEDULE };\r\n    }\r\n}\r\n\r\nconst collect = (connect, monitor) => {\r\n\treturn {\r\n\t\tconnectDropTarget: connect.dropTarget(),\r\n\t\tisOver: !!monitor.isOver(),\r\n\t\tcanDrop: !!monitor.canDrop(),\r\n\t}\r\n}\r\n\r\nexport default DropTarget([ItemTypes.ORDER], rowTarget, collect)(ScheduleRowContainer)","export const CELL_WIDTH_SCALE = 20\r\nexport const TIMELINE_OFFSET_HOURS = 4","import React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport ScheduleRowContainer from './scheduleRow/ScheduleRowContainer'\r\nimport { CELL_WIDTH_SCALE, TIMELINE_OFFSET_HOURS } from '../../constants/schedule'\r\nimport './ScheduleTableView.scss'\r\n\r\nexport function ScheduleTableView({\r\n    tails, flights, \r\n    currentTime, budgetChains,\r\n    addApproachFlight, blankApproachFlight}) { \r\n    const tailsCount = tails.length\r\n    const tailRows = tails.map((tail, i) => (\r\n            <ScheduleRowContainer\r\n                tail={tail} \r\n                key={`tail${tail.id}`}\r\n                flights={flights}\r\n                leftOffset={TIMELINE_OFFSET_HOURS * CELL_WIDTH_SCALE}\r\n                isLast={(tailsCount - 1) === i}\r\n                currentTime={currentTime}\r\n                budgetChains={budgetChains}\r\n                addApproachFlight={addApproachFlight}\r\n                blankApproachFlight={blankApproachFlight}\r\n                timelineOffsetHours={TIMELINE_OFFSET_HOURS}\r\n                cellWidthScale={CELL_WIDTH_SCALE} /> )  \r\n    )\r\n    \r\n    return (\r\n        <div className=\"schedule__container\">            \r\n            <div className=\"schedule__rows\">{tailRows}</div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nScheduleTableView.propTypes = {\r\n    tails: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string, \r\n        airportId: number,\r\n        progress: number,\r\n    })),\r\n    flights: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: PropTypes.object,\r\n        to: PropTypes.object,\r\n        fromIata: PropTypes.string,\r\n        toIata: PropTypes.string,\r\n        dateTakeOff: PropTypes.object,\r\n        dateLanding: PropTypes.object,\r\n        status: string\r\n    })),\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    budgetChains: PropTypes.arrayOf(PropTypes.shape({\r\n        ids: PropTypes.arrayOf(number),\r\n        tailId: number,\r\n    })),\r\n    addApproachFlight: PropTypes.func,\r\n    blankApproachFlight: PropTypes.func,\r\n}\r\n\r\nexport default ScheduleTableView","\r\nimport React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport {\r\n    tailCoordinates,\r\n    filteredFlightsSelector,\r\n    currentTimeSelector,\r\n    budgetChainsElementsSelector,\r\n    approachFlightBlancSelector,\r\n} from '../../selectors/index'\r\nimport { addApproachFlight } from '../../actions/pageActions'\r\nimport ScheduleTableView from './ScheduleTableView'\r\n\r\nexport function ScheduleTableContainer({ tails, flights, \r\n    currentTime, budgetChains,\r\n    addApproachFlight, blankApproachFlight }) {\r\n        return (\r\n            <ScheduleTableView \r\n                tails={tails}\r\n                flights={flights}\r\n                currentTime={currentTime}\r\n                budgetChains={budgetChains}\r\n                addApproachFlight={addApproachFlight}\r\n                blankApproachFlight={blankApproachFlight}\r\n            />\r\n        )\r\n}\r\n\r\nScheduleTableContainer.propTypes = {\r\n    tails: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string, \r\n        airportId: number,\r\n        progress: number,\r\n    })),\r\n    flights: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number, \r\n        name: string,\r\n        tailId: number,\r\n        from: PropTypes.object,\r\n        to: PropTypes.object,\r\n        fromIata: PropTypes.string,\r\n        toIata: PropTypes.string,\r\n        dateTakeOff: PropTypes.object,\r\n        dateLanding: PropTypes.object,\r\n        status: string\r\n    })),\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    budgetChains: PropTypes.arrayOf(PropTypes.shape({\r\n        ids: PropTypes.arrayOf(number),\r\n        tailId: number,\r\n    })),\r\n    addApproachFlight: PropTypes.func,\r\n    blankApproachFlight: PropTypes.func,\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        tails: tailCoordinates(state),\r\n        flights: filteredFlightsSelector(state),\r\n        currentTime: currentTimeSelector(state),\r\n        budgetChains: budgetChainsElementsSelector(state),  \r\n        blankApproachFlight: approachFlightBlancSelector(state),  \r\n    }),{ addApproachFlight })(ScheduleTableContainer)\r\n","import React from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport { DragSource } from 'react-dnd'\r\nimport { ItemTypes } from '../../../../constants/item-types'\r\nimport { getCellProperties } from '../../../../helpers/ScheduleHelper'\r\nimport './OrderScheduleCell.scss'\r\n\r\nconst orderSource = {\r\n    beginDrag(props) {\r\n        return {orderId: props.order.id, type: ItemTypes.ORDER };\r\n    },\r\n    endDrag(props, monitor) {\r\n        const dropResult = monitor.getDropResult()\r\n        if (dropResult && dropResult.type === ItemTypes.FLIGHT && dropResult.id) {\r\n            props.addOrder(props.order.id, +monitor.getDropResult().id);\r\n        }\r\n\r\n        if (dropResult && dropResult.type === ItemTypes.SCHEDULE && dropResult.id) {\r\n            props.createFlightFromOrder(\r\n                props.order.id, \r\n                props.maxFlightId + 1,\r\n                +monitor.getDropResult().id);\r\n        }\r\n    },\r\n};\r\n\r\nconst collect = (connect, monitor) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging(),\r\n})\r\n\r\nexport function OrderScheduleCell({ order, cellWidthScale, currentTime, timelineOffsetHours, connectDragSource }) {\r\n    const { leftOffset, cellWidth } = \r\n        getCellProperties(cellWidthScale, timelineOffsetHours, currentTime, order.dateTakeOff, order.dateLanding)\r\n    \r\n    return connectDragSource(\r\n        <div className={`order-flight-cell order-cell ${order.progress > 0 ? 'inactive' : ''}`}\r\n             style={{left: leftOffset, width: cellWidth}}>\r\n            <div className=\"order-flight-cell__content\">\r\n                <Tooltip disableFocusListener title={`${order.name} ${order.from.iata} - ${order.to.iata}`} placement=\"top\">\r\n                    <span className=\"order-flight-cell__label\" >{order.name}</span>                \r\n                </Tooltip>\r\n                <span className=\"order-flight-cell__airports\" >{`${order.from.iata} - ${order.to.iata}`}</span>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nOrderScheduleCell.propTypes = {\r\n    order: PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n        description: string,\r\n    }), \r\n    cellWidthScale: number,\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    timelineOffsetHours: number,\r\n    createFlightFromOrder: PropTypes.func,\r\n    addOrder: PropTypes.func,\r\n    maxFlightId: number,\r\n    connectDragSource: PropTypes.func,\r\n}\r\n\r\n\r\nexport default DragSource(ItemTypes.ORDER, orderSource, collect)(OrderScheduleCell)","import React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport OrderScheduleCell from './order-schedule-cell/OrderScheduleCell'\r\nimport './OrderScheduleRowView.scss'\r\n\r\nexport function OrderScheduleRowView({ \r\n    orders, cellWidthScale,\r\n    currentTime, timelineOffsetHours, isLast,\r\n    createFlightFromOrder, addOrder,\r\n    maxFlightId, leftOffset\r\n }) {\r\n    return (\r\n        <div className={`schedule__row order-schedule-row ${isLast ? 'last' : ''}`} >\r\n            {orders.map((order, i) => (\r\n                <OrderScheduleCell \r\n                    className={`schedule__row ${(orders.length - 1) === i ? 'last' : ''}`} \r\n                    cellWidthScale={cellWidthScale}\r\n                    currentTime={currentTime}\r\n                    addOrder={addOrder}\r\n                    createFlightFromOrder={createFlightFromOrder}\r\n                    timelineOffsetHours={timelineOffsetHours}\r\n                    maxFlightId={maxFlightId}\r\n                    key={order.id} order={order}/>)\r\n            )}\r\n            <div className=\"schedule__timeline\" style={{left: `${leftOffset}px`}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nOrderScheduleRowView.propTypes = {\r\n    orders: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n        description: string,\r\n    })),     \r\n    cellWidthScale: number,\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    timelineOffsetHours: number,\r\n    isLast: PropTypes.bool,\r\n    createFlightFromOrder: PropTypes.func,\r\n    addOrder: PropTypes.func,\r\n    maxFlightId: number,\r\n    leftOffset: number,\r\n}\r\n\r\nexport default OrderScheduleRowView","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport { maxFlightIdSelector } from '../../../selectors/index'\r\nimport { addOrder, createFlightFromOrder } from '../../../actions/pageActions'\r\nimport OrderScheduleRowView from './OrderScheduleRowView'\r\n\r\nexport function OrderScheduleRowContainer({ \r\n    orders, cellWidthScale,\r\n    currentTime, timelineOffsetHours, isLast,\r\n    createFlightFromOrder, addOrder,\r\n    maxFlightId, leftOffset\r\n }) {\r\n    return (\r\n       <OrderScheduleRowView \r\n            orders={orders}\r\n            cellWidthScale={cellWidthScale}\r\n            currentTime={currentTime}\r\n            timelineOffsetHours={timelineOffsetHours}\r\n            isLast={isLast}\r\n            createFlightFromOrder={createFlightFromOrder}\r\n            addOrder={addOrder}\r\n            maxFlightId={maxFlightId}\r\n            leftOffset={leftOffset}\r\n       />\r\n    )\r\n }\r\n\r\n OrderScheduleRowContainer.propTypes = {\r\n    orders: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n        description: string,\r\n    })),     \r\n    cellWidthScale: number,\r\n    currentTime: PropTypes.instanceOf(moment),\r\n    timelineOffsetHours: number,\r\n    isLast: PropTypes.bool,\r\n    createFlightFromOrder: PropTypes.func,\r\n    addOrder: PropTypes.func,\r\n    maxFlightId: number,\r\n    leftOffset: number,\r\n}\r\n\r\n export default connect(\r\n    (state) => ({\r\n        maxFlightId: maxFlightIdSelector(state),\r\n    }), \r\n    { addOrder, createFlightFromOrder }\r\n)(OrderScheduleRowView)","import React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport { CELL_WIDTH_SCALE, TIMELINE_OFFSET_HOURS } from '../../constants/schedule'\r\nimport OrderScheduleRowContainer from './order-schedule-row/OrderScheduleRowContainer';\r\nimport './OrderScheduleView.scss'\r\n\r\nexport function OrderScheduleView({ orderSchedule, currentTime }) {\r\n    const maxRowIndex = \r\n        orderSchedule.length > 0 ? Math.max(...orderSchedule.map(cell => cell.rowIndex)) : 0\r\n    const rows = Array(maxRowIndex + 1).fill('').map((_, rowIndex) => {\r\n        const cells = orderSchedule.filter(cell => cell.rowIndex === rowIndex)\r\n        return (\r\n            <OrderScheduleRowContainer\r\n                key={rowIndex}\r\n                leftOffset={TIMELINE_OFFSET_HOURS * CELL_WIDTH_SCALE}\r\n                rowIndex={rowIndex}\r\n                isLast={maxRowIndex === rowIndex} \r\n                orders={cells}\r\n                currentTime={currentTime}\r\n                timelineOffsetHours={TIMELINE_OFFSET_HOURS}\r\n                cellWidthScale={CELL_WIDTH_SCALE} />\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"schedule__container order-schedule__container\">\r\n             <div className=\"schedule__rows\" >\r\n                {rows}\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nOrderScheduleView.propTypes = {\r\n    orderSchedule: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n        description: string,\r\n    })), \r\n    currentTime: PropTypes.instanceOf(moment)\r\n}\r\n\r\nexport default OrderScheduleView","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport moment from 'moment'\r\nimport { ordersToScheduleSelector, currentTimeSelector } from '../../selectors/index'\r\nimport OrderScheduleView from './OrderScheduleView';\r\n\r\nexport function OrderScheduleContainer({ orderSchedule, currentTime }) {\r\n    return (\r\n        <OrderScheduleView \r\n            orderSchedule={orderSchedule}\r\n            currentTime={currentTime}\r\n        />\r\n    )\r\n}\r\n\r\nOrderScheduleContainer.propTypes = {\r\n    orderSchedule: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string,\r\n        fromId: number,\r\n        toId: number,\r\n        dateTakeOff: PropTypes.instanceOf(moment),\r\n        dateLanding: PropTypes.instanceOf(moment),\r\n        status: string,\r\n        progress: number,\r\n        orderId: number,\r\n        pay: number,\r\n        cost: number,\r\n        description: string,\r\n    })), \r\n    currentTime: PropTypes.instanceOf(moment)\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        orderSchedule: ordersToScheduleSelector(state),\r\n        currentTime: currentTimeSelector(state),\r\n    })\r\n)(OrderScheduleContainer)","import React from 'react'\r\nimport PropTypes, { number, string, func } from 'prop-types'\r\nimport './LicenceItem.scss'\r\n\r\nexport function LicenceItem({ licence, image, addLicence, currentBudget }) {\r\n    return (\r\n        <div className=\"licence-item\">\r\n            <div className=\"licence-item__name-column\">\r\n                <div className=\"licence-item__name\">{licence.name}</div>\r\n                {!licence.isActive && currentBudget < licence.cost ? (\r\n                    <div className=\"licence-item__cost inactive\">{licence.cost}☼</div>) :  (<></>)}\r\n                {!licence.isActive && currentBudget >= licence.cost ? (\r\n                    <div>\r\n                        <div className=\"licence-item__cost\">{licence.cost}☼</div>\r\n                        <div className=\"licence-item__buy-button\" onClick={() => addLicence(licence)}>Buy licence</div>\r\n                    </div>\r\n                ) :  (<></>)}\r\n                {licence.isActive ? (<div className=\"licence-item__active-licence\">✓</div>) : (<></>)}                \r\n            </div>            \r\n            <div className=\"licence-item__icon\">\r\n                <img src={image} alt=\"region map\"></img>   \r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nLicenceItem.propTypes = {\r\n    licence: PropTypes.shape({\r\n        id: number,\r\n        regionIds: PropTypes.arrayOf(number),\r\n        name: string,\r\n        imageKey: string,\r\n        cost: number,\r\n    }),\r\n    addLicence: func,\r\n    currentBudget: number,\r\n    image: string,\r\n}\r\n\r\nexport default LicenceItem","export const aircraftCost = 100","import React, { useState } from 'react'\r\nimport PropTypes, { number, string, func } from 'prop-types'\r\nimport LicenceItem from './licence-item/LicenceItem'\r\nimport aircraftIcon from '../../assets/aircraft-icon__red.svg'\r\nimport { aircraftCost } from '../../constants/tails'\r\nimport './StoreView.scss'\r\n\r\nexport function StoreView({ licences, images, addLicence, addTail, currentBudget, airports }) {\r\n    const [airportId, setAirportId] = useState(1);\r\n    const sortedAirports = [...airports].sort((a, b) => (a.iata < b.iata) ? -1: 1)\r\n    const onAirportIdChange = (event) => {\r\n        const newAirportId = +event.target.value;\r\n        setAirportId(newAirportId)\r\n    }\r\n\r\n    return (\r\n        <div className=\"store__container\">\r\n            <div className=\"store__licence-title\">Licences:</div>\r\n                <div className=\"store__licences-container\">\r\n                {licences.map(licence => (\r\n                    <LicenceItem \r\n                        key={licence.id} \r\n                        licence={licence} \r\n                        addLicence={addLicence}\r\n                        currentBudget={currentBudget}\r\n                        image={images[licence.imageKey]}/>\r\n                ))}\r\n            </div>\r\n            <div className=\"store__aircrafts-title\">Aircrafts:</div>\r\n            <div className={`store__aircrafts-buy-button-container ${ currentBudget < aircraftCost ? 'without-button' : ''}`}>\r\n                <div className={`store__aircrafts-buy-button ${ currentBudget < aircraftCost ? 'hidden' : ''}`}\r\n                    onClick={() => addTail(airportId, aircraftCost)}>Buy aircraft</div>\r\n                <div className=\"store__aircrafts-icon-container \">\r\n                    <div className={`store__aircrafts-cost ${currentBudget < aircraftCost ? 'inactive' : ''}`}>\r\n                        {aircraftCost} ☼\r\n                    </div>\r\n                    <select className={`store__airport-selector ${ currentBudget < aircraftCost ? 'hidden' : ''}`} value={airportId} onChange={onAirportIdChange}>\r\n                        {sortedAirports.map(airport => <option value={airport.id} key={airport.id}>{airport.iata}</option>)}\r\n                    </select>\r\n                    <img className=\"store__aircrafts-icon\" width=\"40\" height=\"40\" src={aircraftIcon} alt=\"aircrfat for buy\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nStoreView.propTypes = {\r\n    licences: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        regionIds: PropTypes.arrayOf(number),\r\n        name: string,\r\n        imageKey: string,\r\n        cost: number,\r\n    })),\r\n    addLicence: func,\r\n    addTail: func,\r\n    currentBudget: number,\r\n    images: PropTypes.object,\r\n    airports: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            id: number,\r\n            name: string,\r\n            iata: string,\r\n            countriesId: number,\r\n            latt: number,\r\n            longt: number,\r\n            costOnHour: number,\r\n        })\r\n    ),\r\n}\r\n\r\nexport default StoreView","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes, { number, string, func } from 'prop-types'\r\nimport { licencesSelector, currentBudgetSelector, licencedAirportsSelector } from '../../selectors/index'\r\nimport { addLicence, addTail }  from '../../actions/pageActions'\r\nimport StoreView from './StoreView'\r\nimport eurasia from '../../assets/eurasia.png'\r\nimport africa from '../../assets/africa.png'\r\nimport northAmerica from '../../assets/north_america.png'\r\nimport southAmerica from '../../assets/south_america.png'\r\nimport australia from '../../assets/australia.png'\r\nimport antarctida from '../../assets/antarctica.png'\r\n\r\nexport function StoreContainer({ licences, addLicence, addTail, currentBudget, airports }) {\r\n    const images = { eurasia, africa, northAmerica, southAmerica, australia, antarctida }\r\n    return (\r\n        <StoreView \r\n            licences={licences}\r\n            images={images}\r\n            addLicence={addLicence}\r\n            addTail={addTail}\r\n            airports={airports}\r\n            currentBudget={currentBudget}/>\r\n    )\r\n}\r\n\r\nStoreContainer.propTypes = {\r\n    licences: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        regionIds: PropTypes.arrayOf(number),\r\n        name: string,\r\n        imageKey: string,\r\n        cost: number,\r\n    })),\r\n    airports: PropTypes.arrayOf(\r\n        PropTypes.shape({ \r\n            id: number,\r\n            name: string,\r\n            iata: string,\r\n            countriesId: number,\r\n            latt: number,\r\n            longt: number,\r\n            costOnHour: number,\r\n        })\r\n    ),\r\n    addLicence: func,\r\n    currentBudget: number,\r\n}\r\n\r\nexport default connect((state) => ({\r\n        licences: licencesSelector(state),\r\n        currentBudget: currentBudgetSelector(state),\r\n        airports: licencedAirportsSelector(state),    \r\n    }), \r\n    { addLicence, addTail }\r\n)(StoreContainer)\r\n","import React from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport achievement_empty from '../../../assets/achievement_empty.svg'\r\nimport './AchievementItem.scss'\r\n\r\nexport function AchievementItem({ achievement, currentAchievementIds, images }) {\r\n    const isOpen = currentAchievementIds.includes(achievement.id)\r\n    return (\r\n        <div className={`achievement-item ${isOpen ? 'open' : ''}`}>\r\n            <img src={isOpen ? images[achievement.imageKey] : achievement_empty} alt=\"achievement icon\" />\r\n            <div className=\"achievement-item__description-container\">\r\n                <span>{achievement.title}</span>\r\n                <span className={`${isOpen ? 'hidden' : ''}`}>{achievement.description}</span>\r\n                <span className={`${!isOpen ? 'hidden' : ''}`}>{achievement.congratulation}</span>         \r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nAchievementItem.propTypes = {\r\n    achievement: PropTypes.shape({\r\n        id: number,\r\n        title: string,\r\n        imageKey: string,\r\n        description: string,\r\n        congratulation: string,\r\n    }),\r\n    currentAchievementIds: PropTypes.arrayOf(number),\r\n    images: PropTypes.object,\r\n}\r\n\r\nexport default AchievementItem","import React from 'react'\r\nimport AchievementItem from './achievement/AchievementItem'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport './AchievementsView.scss'\r\n\r\nexport function AcheivementsView({ achievements, images, currentAchievementIds }) {\r\n    return (\r\n        <div className=\"achievements__container\">\r\n            {achievements.map(achievement => (\r\n                <AchievementItem\r\n                    key={achievement.id}\r\n                    images={images}\r\n                    currentAchievementIds={currentAchievementIds}\r\n                    achievement={achievement}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nAcheivementsView.propTypes = {\r\n    achievement: PropTypes.shape({\r\n        id: number,\r\n        title: string,\r\n        imageKey: string,\r\n        description: string,\r\n        congratulation: string,\r\n    }),\r\n    currentAchievementIds: PropTypes.arrayOf(number),\r\n    images: PropTypes.object,\r\n}\r\n\r\nexport default AcheivementsView","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport { achievementsSelector, currentAchievementIdsSelector } from '../../selectors/index'\r\nimport AchievementsView from './AchievementsView'\r\nimport achievementMagelan from '../../assets/achievement_Magelan.svg'\r\nimport achievementAviaCroesus from '../../assets/achievement_avia_Croesus.svg'\r\nimport achievementOurHero from '../../assets/achievement_our_hero.svg'\r\nimport achievementGreatArmator from '../../assets/achievement_great_armator.svg'\r\nimport achievement_achievment_hunter from '../../assets/achievement_achievment_hunter.svg'\r\n\r\nexport function AchievementsContainer({ achievements, currentAchievementIds }) {\r\n    const images = {\r\n        achievementMagelan, achievementAviaCroesus, achievementOurHero,\r\n        achievementGreatArmator, achievement_achievment_hunter,\r\n     }\r\n     \r\n    return (\r\n        <AchievementsView\r\n            achievements={achievements}\r\n            currentAchievementIds={currentAchievementIds}\r\n            images={images}/>\r\n    )\r\n}\r\n\r\nAchievementsContainer.propTypes = {\r\n    achievements: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        title: string,\r\n        imageKey: string,\r\n        description: string,\r\n        congratulation: string,\r\n    })),\r\n    currentAchievementIds: PropTypes.arrayOf(number),\r\n}\r\n\r\nexport default connect((state) => ({\r\n    achievements: achievementsSelector(state),\r\n    currentAchievementIds: currentAchievementIdsSelector(state),\r\n}))(AchievementsContainer)","import React, { useEffect, useState } from 'react'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport * as d3 from 'd3'\r\nimport { translateAlong } from '../../../helpers/MapHelper'\r\nimport './CongratulationView.scss'\r\nimport aircraftIconRed from '../../../assets/aircraft-icon__red.svg'\r\nimport achievementMagelan from '../../../assets/achievement_Magelan.svg'\r\nimport achievementAviaCroesus from '../../../assets/achievement_avia_Croesus.svg'\r\nimport achievementOurHero from '../../../assets/achievement_our_hero.svg'\r\nimport achievementGreatArmator from '../../../assets/achievement_great_armator.svg'\r\nimport achievement_achievment_hunter from '../../../assets/achievement_achievment_hunter.svg'\r\n\r\nconst WIDTH = 600\r\nconst HEIGHT = 400\r\n\r\nexport function CongratulationView({ achievement }) {\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n    useEffect(() => {\r\n        init(isLoaded, setIsLoaded, images, achievement)\r\n    })\r\n    const images = {\r\n        achievementMagelan, achievementAviaCroesus, achievementOurHero,\r\n        achievementGreatArmator, achievement_achievment_hunter,\r\n     }\r\n\r\n    return (\r\n        <div className=\"congratulation__container\">\r\n            <svg id=\"congratulation\"></svg>\r\n            <div className=\"congratulation__title\">{achievement.title}</div>\r\n            <div className=\"congratulation__description\">{achievement.congratulation}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nfunction init(isLoaded, setIsLoaded, images, achievement) {\r\n    if (!isLoaded) {\r\n        const svg = d3.select('#congratulation')\r\n            .attr(\"width\", WIDTH)\r\n            .attr(\"height\", HEIGHT)\r\n            .attr('fill', 'green')\r\n\r\n        const lines = [\r\n            \"M 300 200 L 300 20\",\r\n            \"M 300 200 Q 250 70, 150 50\",\r\n            \"M 300 200 Q 250 100, 100 100\",\r\n            \"M 300 200 Q 200 100, 70 150\",\r\n            \"M 300 200 Q 200 100, 50 200\",\r\n            \"M 300 200 Q 350 70, 450 50\",\r\n            \"M 300 200 Q 350 100, 500 100\",\r\n            \"M 300 200 Q 400 100, 530 150\",\r\n            \"M 300 200 Q 400 100, 550 200\",\r\n        ]\r\n        svg.append(\"g\")\r\n            .attr(\"class\", \"congratulation__lines\")\r\n            .selectAll(\"path\")\r\n            .data(lines)\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr('id', d => d.id)\r\n            .attr('class', d => 'line' + d.id)\r\n            .attr(\"d\", d => d)\r\n            .attr('fill', 'none')  \r\n            .attr('stroke', 'black')\r\n\r\n        const lineNodes = svg.select('.congratulation__lines')\r\n            .selectAll('path').nodes()\r\n\r\n        lineNodes\r\n             .forEach((path) => {\r\n                const length = path.getTotalLength()\r\n                d3.select(path)\r\n                  .attr('stroke-width', 4)\r\n                  .attr('stroke-dasharray', length) \r\n                  .attr('stroke-dashoffset', length)\r\n                  .attr('stroke', 'slategrey')  \r\n                  .attr('style', 'opacity: 1')\r\n                  .transition()\r\n                  .duration(2000) \r\n                  .attr('stroke-dashoffset', 0)\r\n                  .duration(2000) \r\n                  .attr('style', 'opacity: 0')\r\n            }\r\n        )    \r\n        \r\n        svg.append(\"g\")\r\n            .attr(\"class\", \"congratulation__aircrafts\")\r\n            .selectAll('image')\r\n            .data(lines)\r\n            .enter()\r\n            .append('image')\r\n            .attr('xlink:href', aircraftIconRed)\r\n            .attr('width', 30)\r\n            .attr('height', 30)\r\n            .attr('style', 'opacity: 1')\r\n        \r\n        svg.select('.congratulation__aircrafts')\r\n           .selectAll('image')\r\n           .nodes()\r\n           .forEach((image, index) => {\r\n                d3.select(image)\r\n                    .transition()\r\n                    .duration(2000)\r\n                    .attrTween(\"transform\", translateAlong(lineNodes[index]))\r\n                    .transition()\r\n                    .duration(300)\r\n                    .attr('style', 'opacity: 0')\r\n           })\r\n\r\n        svg.append('image')\r\n            .attr('xlink:href', images[achievement.imageKey])\r\n            .attr('x', 200)\r\n            .attr('y', 50)\r\n\r\n        setIsLoaded(true)\r\n    }\r\n}\r\n\r\nCongratulationView.propTypes = {\r\n    achievement: PropTypes.shape({\r\n        id: number,\r\n        title: string,\r\n        imageKey: string,\r\n        description: string,\r\n        congratulation: string,\r\n    }),\r\n}\r\n\r\nexport default CongratulationView","export const BUDGET_ACHIEVEMENT_LIMIT = 10000\r\nexport const STOCKING_ACHIEVEMENT_LIMIT = 5\r\nexport const TAIL_ACHIEVEMENT_LIMIT = 10\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes, { number, string } from 'prop-types'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport moment from 'moment'\r\nimport {\r\n    achievementsSelector, currentAchievementIdsSelector,\r\n    licenceIdsSelector, currentLicenceIdsSelector,\r\n    maxTimeSelector, currentBudgetSelector,\r\n    stockingFlightCountsSelector, tailsSelector,\r\n} from '../../../selectors/index'\r\nimport { addAchievement } from '../../../actions/pageActions'\r\nimport CongratulationView from './CongratulationView'\r\nimport { getAchievementList } from '../../../helpers/AchievementHelper'\r\nimport { \r\n    BUDGET_ACHIEVEMENT_LIMIT, \r\n    STOCKING_ACHIEVEMENT_LIMIT, \r\n    TAIL_ACHIEVEMENT_LIMIT \r\n} from '../../../constants/achievements'\r\n\r\nimport './CongratulationContainer.scss'\r\n\r\nexport function CongratulationContainer({ achievements, currentAchievementIds,\r\n    maxTime, licencesIds, currentLicenceIds, currentBudget, stockingFlightCounts, tails, addAchievement }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [achievementQueue, setAchievementQueue] = useState([])\r\n    const [achievementToShow, setAchievementToShow] = useState()\r\n    const onContainerClick = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n    useEffect(() => {\r\n        const achievementIdsList = getAchievementList(currentAchievementIds, licencesIds,\r\n            currentLicenceIds, currentBudget, stockingFlightCounts,\r\n            tails, achievements, BUDGET_ACHIEVEMENT_LIMIT, \r\n            STOCKING_ACHIEVEMENT_LIMIT, TAIL_ACHIEVEMENT_LIMIT )\r\n\r\n        if (achievementIdsList.length > 0) {\r\n            if (achievementQueue.length === 0) {\r\n                const newAchievement = achievements[achievementIdsList[0]]\r\n                setAchievementToShow(newAchievement)\r\n                setAchievementQueue(achievementIdsList.slice(1))\r\n                addAchievement(newAchievement.id)\r\n\r\n                setTimeout(() => {\r\n                    setIsOpen(true)\r\n                }, 0)\r\n            } else {\r\n                setAchievementQueue([...achievementQueue, achievementIdsList])\r\n            }\r\n        }\r\n\r\n    }, [maxTime, tails, currentLicenceIds, stockingFlightCounts, currentBudget])\r\n\r\n    const handleClose = () => {\r\n        if (achievementQueue.length > 0) {\r\n            setAchievementToShow(achievements[achievementQueue[0]])\r\n            setIsOpen(true)\r\n            setAchievementQueue(achievementQueue.slice(1))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"congratulation__container\"\r\n            onClick={onContainerClick}>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                onClose={handleClose}\r\n                open={isOpen}>\r\n                <div className=\"modal-container\">\r\n                    <CongratulationView achievement={achievementToShow} />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nCongratulationContainer.propTypes = {\r\n    achievements: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        title: string,\r\n        imageKey: string,\r\n        description: string,\r\n        congratulation: string,\r\n    })),\r\n    currentAchievementIds: PropTypes.arrayOf(number),\r\n    maxTime: PropTypes.instanceOf(moment),\r\n    licencesIds: PropTypes.arrayOf(number),\r\n    currentLicenceIds: PropTypes.arrayOf(number),\r\n    currentBudget: number,\r\n    stockingFlightCounts: number,\r\n    tails: PropTypes.arrayOf(PropTypes.shape({\r\n        id: number,\r\n        name: string, \r\n        airportId: number,\r\n        progress: number,\r\n    })),\r\n    addAchievement: PropTypes.func,\r\n}\r\n\r\nexport default connect((state) => ({\r\n    achievements: achievementsSelector(state),\r\n    currentAchievementIds: currentAchievementIdsSelector(state),\r\n    licencesIds: licenceIdsSelector(state),\r\n    currentLicenceIds: currentLicenceIdsSelector(state),\r\n    maxTime: maxTimeSelector(state),\r\n    currentBudget: currentBudgetSelector(state),\r\n    stockingFlightCounts: stockingFlightCountsSelector(state),\r\n    tails: tailsSelector(state),\r\n}), { addAchievement })(CongratulationContainer)\r\n","export function getAchievementList(currentAchievementIds, licencesIds,\r\n    currentLicenceIds, currentBudget, stockingFlightCounts,\r\n    tails, achievements, budgetAchievementLimit, \r\n    stockingAchievementLimit, tailAchievementLimit) {\r\n    const achievementIdsList = []\r\n\r\n    if (licencesIds.length === currentLicenceIds.length &&\r\n        !currentAchievementIds.includes(0)) {\r\n        achievementIdsList.push(0)\r\n    }\r\n\r\n    if (currentBudget >= budgetAchievementLimit &&\r\n        !currentAchievementIds.includes(1)) {\r\n        achievementIdsList.push(1)\r\n    }\r\n\r\n    if (stockingFlightCounts === stockingAchievementLimit &&\r\n        !currentAchievementIds.includes(2)) {            \r\n        achievementIdsList.push(2)\r\n    }\r\n\r\n    if (tails.length === tailAchievementLimit &&\r\n        !currentAchievementIds.includes(3)) {\r\n        achievementIdsList.push(3)\r\n    }\r\n\r\n    if (achievements.length === currentAchievementIds.length + 1 &&\r\n        !currentAchievementIds.includes(4)) {\r\n        achievementIdsList.push(4)\r\n    }\r\n\r\n    return achievementIdsList\r\n}","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { DragDropContext } from 'react-dnd'\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport * as d3 from 'd3'\r\nimport TimelineContainer from '../src/components/timeline/TimelineContainer'\r\nimport FlightListContainer from '../src/components/flightList/FlightListContainer'\r\nimport TailListContainer from '../src/components/tailList/TailListContainer'\r\nimport OrderListContainer from '../src/components/orderList/OrderListContainer'\r\nimport MapContainer from '../src/components/map/MapContainer'\r\nimport ScheduleTableContainer from './components/schedule/ScheduleTableContainer'\r\nimport OrderScheduleContainer from './components/order-schedule/OrderScheduleContainer';\r\nimport StoreContainer from '../src/components/store/StoreContainer'\r\nimport AchievementsContainer from '../src/components/achievements/AchievementsContainer'\r\nimport CongratulationContainer from './components/achievements/congratulation/CongratulationContainer'\r\nimport { addApproachFlight, checkCanceled } from './actions/pageActions'\r\nimport {\r\n    maxTimeSelector,\r\n    tailCoordinates, \r\n    ordersSelector,\r\n} from './selectors/index'\r\nimport logo from '../src/assets/map-mapping-logo.svg'\r\nimport './App.scss';\r\nimport { useEffect } from 'react';\r\n\r\nconst tabNames = {\r\n    MAP_TAB: 'mapTab',\r\n    SCHEDULE_TAB: 'scheduleTab',\r\n    STORE: 'store',\r\n    ACHIEVEMENTS: 'achievements',\r\n}\r\n\r\nfunction App ({ maxTime, tails, orders, checkCanceled }) {\r\n    const [countries, setCountries] = useState();\r\n    const [selectedOrder, setSelectedOrder] = useState();\r\n    useEffect(() => {\r\n        if (!countries) {     \r\n            d3.json('world_countries.json').then((countries) => {\r\n                setCountries(countries)\r\n            }).catch(error => console.log(error))\r\n        }\r\n    }, [maxTime])\r\n\r\n    useEffect(() => {\r\n        checkCanceled(tails, orders, maxTime)\r\n    }, [ maxTime ])\r\n\r\n    const [tabName, setTabName] = useState(tabNames.SCHEDULE_TAB)\r\n\r\n    const getActiveClass = (name) => tabName === name ? 'active' : ''    \r\n    const hundleOrderClick = (id) => setSelectedOrder(id)\r\n\r\n    return (\r\n        <>\r\n            <CongratulationContainer className=\"congratulation-container\"/>    \r\n            <div className=\"main-container\">            \r\n                <div className=\"main-container__column main-container__flight-column\">\r\n                    <div className=\"logo-container\">\r\n                        <img src={logo} alt=\"logo\"></img>   \r\n                    </div>\r\n                    <div className=\"section-container tails-section\">\r\n                        <div className=\"section-container__header\">\r\n                            <span>Tails</span>\r\n                        </div>\r\n                        <div className=\"section-container__content\">\r\n                            <TailListContainer />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-container flights-section\">\r\n                        <div className=\"section-container__header\">\r\n                            <span>Flights</span>\r\n                        </div>\r\n                        <div className=\"section-container__content\">\r\n                            <FlightListContainer />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"section-container orders-section\">\r\n                        <div className=\"section-container__header\">\r\n                            <span>Orders</span>\r\n                        </div>\r\n                        <div className=\"section-container__content\">\r\n                            <OrderListContainer selectedOrder={selectedOrder}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-container__column main-container__map-column\">\r\n                <div className=\"map-column__header\">\r\n                    <div><TimelineContainer /></div>\r\n                    <div className=\"map-column__tab-controls \">\r\n                    <span className={`main-container__tab-control ${getActiveClass(tabNames.MAP_TAB)}`} \r\n                            onClick={() => setTabName(tabNames.MAP_TAB)}>Map</span>\r\n                    <span className={`main-container__tab-control ${getActiveClass(tabNames.SCHEDULE_TAB)}`}\r\n                            onClick={() => setTabName(tabNames.SCHEDULE_TAB)}>Shedule</span>\r\n                    <span className={`main-container__tab-control ${getActiveClass(tabNames.STORE)}`}\r\n                            onClick={() => setTabName(tabNames.STORE)}>Store</span>\r\n                    <span className={`main-container__tab-control ${getActiveClass(tabNames.ACHIEVEMENTS)}`}\r\n                            onClick={() => setTabName(tabNames.ACHIEVEMENTS)}>Achievements</span>\r\n                    </div>\r\n                </div>\r\n                {getTabContent(tabName, countries, hundleOrderClick)}\r\n                </div>                \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n    function getTabContent(tabName, countries, hundleOrderClick) {\r\n    switch(tabName) {\r\n        case tabNames.MAP_TAB: \r\n            return <MapContainer countries={countries} onOrderClick={hundleOrderClick}/>\r\n        case tabNames.SCHEDULE_TAB: \r\n            return (\r\n                <div className=\"schedules__container\">\r\n                    <ScheduleTableContainer />\r\n                    <div className=\"schedules__line\"></div>\r\n                    <OrderScheduleContainer />\r\n                </div>\r\n            )\r\n        case tabNames.STORE:\r\n            return (<StoreContainer />)\r\n        case tabNames.ACHIEVEMENTS:\r\n             return (<AchievementsContainer />)\r\n        default: return (<></>)\r\n    }          \r\n    }\r\n\r\n    export default DragDropContext(HTML5Backend)(\r\n        connect((state) => ({\r\n            maxTime: maxTimeSelector(state),\r\n            tails: tailCoordinates(state),\r\n            orders: ordersSelector(state),\r\n        }), \r\n        { addApproachFlight, checkCanceled })(App)\r\n    );\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport { getOrderDescription, getRandomFromToAirportIds, getCostAndPay } from '../../helpers/FlightHelper'\r\n\r\nconst maxHourOffset = 48\r\nconst minHourOffset = 2\r\nconst randomCoeff = 0.6\r\nconst maxFlightOnHour = 6\r\n\r\nexport function generateOrders(maxTime, maxFlightId, \r\n    airports, airportDistances, fuelCost, isRequired) {\r\n    if (isRequired || Math.random() > randomCoeff) {\r\n        const flighOnHour = isRequired ? maxFlightOnHour : \r\n            Math.round(Math.random() * maxFlightOnHour + 1)\r\n        const flights = Array(flighOnHour).fill('')\r\n            \r\n        return flights.map((_, index) => \r\n            generateOrder(maxTime, maxFlightId + index, \r\n                airports, airportDistances, fuelCost)\r\n        )\r\n    }\r\n\r\n    return []    \r\n}\r\n\r\nfunction generateOrder(maxTime, maxFlightId, airports, airportDistances, fuelCost) {\r\n    const timeOffset = \r\n        Math.round((Math.random() * (maxHourOffset - minHourOffset)  + minHourOffset))  \r\n    const { fromId, toId } = getRandomFromToAirportIds(airports.map(value => value.id))\r\n    \r\n    const flightLength = airportDistances(fromId, toId)\r\n    const dateTakeOff = maxTime.clone().add(timeOffset, 'hours')    \r\n    const dateLanding = dateTakeOff.clone().add(flightLength, 'hours')\r\n\r\n    const { cost, pay } = getCostAndPay(fromId, toId, airportDistances, airports, fuelCost)    \r\n    const { title, description } = getOrderDescription()\r\n    const id = maxFlightId + 1\r\n\r\n    return {\r\n        id,\r\n        fromId,\r\n        toId,\r\n        dateTakeOff,\r\n        dateLanding,\r\n        pay,\r\n        cost,\r\n        description,\r\n        name: `${title} ${id}`,\r\n        tail: null,\r\n        tailId: null,\r\n        status: 'planned',\r\n        progress: -1,\r\n    }\r\n}\r\n","import moment from 'moment'\r\nimport { pageActionTypes } from '../constants/action-types';\r\nimport { generateOrders } from '../common/orders-generator/orders-generator'\r\nimport { flightStatuses } from '../constants/flight-status'\r\n\r\nconst initialState = {\r\n\titems: {\r\n\t\t1: {\r\n\t\t\tid: 1,\r\n\t\t\tname: 'Кускус с овощами на подлете',\r\n\t\t\tfromId: 11,\r\n\t\t\ttoId: 2,\r\n\t\t\tdateTakeOff: moment.utc('2000-01-01T12:00:00+00:00'),\r\n\t\t\tdateLanding: moment.utc('2000-01-01T20:00:00+00:00'),\r\n\t\t\tstatus: 'progress',\r\n\t\t\tprogress: 16,\r\n\t\t\torderId: 1,\r\n\t\t\tpay: 2000,\r\n\t\t\tcost: 1200,\r\n\t\t\tdescription: 'Груз кускуса чулок с овощами для праздника Лори',\r\n\t\t},\r\n\t\t2: {\r\n\t\t\tid: 2,\r\n\t\t\tname: 'Сколопендры к ужину',\r\n\t\t\tfromId: 14,\r\n\t\t\ttoId: 15,\r\n\t\t\tdateTakeOff: moment.utc('2000-01-01T13:00:00+00:00'),\r\n\t\t\tdateLanding: moment.utc('2000-01-01T19:00:00+00:00'),\r\n\t\t\tstatus: flightStatuses.PLANED,\r\n\t\t\tprogress: -1,\r\n\t\t\tpay: 3000,\r\n\t\t\tcost: 500,\r\n\t\t\tdescription: 'Груз сколопендр для семейного ужина в Бо–Кап',\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport function ordersReducer(state = initialState, action) {\r\n\tconst { type, payload = {} } = action\r\n\r\n\tswitch (type) {\r\n\t\tcase pageActionTypes.GENERATE_ORDERS:\r\n\t\t\tconst { maxTime, maxFlightId, airports, airportDistances,\r\n\t\t\t\tfuelCost, isRequired } = payload\r\n\t\t\tconst newOrders =\r\n\t\t\t\tgenerateOrders(maxTime, maxFlightId, airports, airportDistances, fuelCost, isRequired)\r\n\t\t\t\t\t.reduce((result, value) => {\r\n\t\t\t\t\t\tresult[value.id] = value\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t}, {})\r\n\r\n\t\t\treturn { ...state, items: { ...state.items, ...newOrders } }\r\n\t\tdefault: return state;\r\n\t}\r\n}\r\n","import { pageActionTypes } from '../constants/action-types'\r\n\r\nconst initialState = [\r\n    {\r\n        id: 1,\r\n        name: 'A-1',\r\n        airportId: 11,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'A-2',\r\n        airportId: 8,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'A-3',\r\n        airportId: 2,\r\n    },\r\n]\r\n\r\nexport function tailsReducer(state = initialState, action) {\r\n    const { type, payload = {} } = action\r\n    const { airportId } = payload\r\n    switch (type) {\r\n        case pageActionTypes.ADD_TAIL: \r\n            const maxTailId = Math.max(...state.map(tail => tail.id))\r\n            return [...state, {\r\n                airportId,\r\n                id: maxTailId + 1,\r\n                name: `A-${maxTailId + 1}`,\r\n            }]\r\n        default: return state;\r\n    }\r\n}","import { pageActionTypes } from '../constants/action-types'\r\nimport { getEmptyFlight } from '../helpers/FlightHelper'\r\nimport { flightStatuses } from '../constants/flight-status'\r\n\r\nconst initialState = {}\r\n\r\nexport function flightsReducer(state = initialState, action) {\r\n\tconst { type, payload = {} } = action\r\n\tconst { flightId, tailId, orderId } = payload\r\n\tconst flight = flightId ? state[flightId] : {};\r\n\tconst newState = { ...state }\r\n\tlet newFlight\r\n\tswitch (type) {\r\n\t\tcase pageActionTypes.ADD_TAIL_IN_FLIGHT:\r\n\t\t\tnewFlight = { ...flight, tailId }\r\n\t\t\treturn { ...state, [newFlight.id]: newFlight }\r\n\t\tcase pageActionTypes.ADD_ORDER:\r\n\t\t\tif (flight) {\r\n\t\t\t\tnewFlight = { ...flight, orderId }\r\n\t\t\t\treturn { ...state, [newFlight.id]: newFlight }\r\n\t\t\t}\r\n\t\t\treturn state\r\n\t\tcase pageActionTypes.ADD_FLIGHT:\r\n\t\t\tnewState[payload.flight.id] = payload.flight\r\n\t\t\treturn newState\r\n\t\tcase pageActionTypes.ADD_EMPTY_FLIGHT:\r\n\t\t\tnewState[flightId] = getEmptyFlight(flightId)\r\n\t\t\treturn newState\r\n\t\tcase pageActionTypes.REMOVE_FLIGHT:\r\n\t\t\tdelete newState[flightId]\r\n\t\t\treturn newState\r\n\t\tcase pageActionTypes.ADD_APPROACH_FLIGHT:\r\n\t\t\tif (payload.flight.fromId !== payload.flight.toId) {\r\n\t\t\t\tnewState[payload.flight.id] = payload.flight\r\n\t\t\t\treturn newState\r\n\t\t\t}\r\n\t\t\treturn state\r\n\t\tcase pageActionTypes.CREATE_FLIGHT_FROM_ORDER:\r\n\t\t\tconst { newFlightId } = payload\r\n\t\t\tnewState[newFlightId] = getEmptyFlight(newFlightId, tailId, orderId)\r\n\t\t\treturn newState\r\n\t\tcase pageActionTypes.CHECK_CANCELED:\r\n\t\t\tconst { tails, maxTime, orders } = payload\r\n\r\n\t\t\tconst canceledFlights =  Object.values(state).filter(flight => {\r\n\t\t\t\tconst linkedOrder = orders.find(order => order.id === flight.orderId)\r\n\t\t\t\tconst dateTakeOff = linkedOrder ? linkedOrder.dateTakeOff : flight.dateTakeOff\r\n\t\t\t\tif (dateTakeOff && dateTakeOff.isSame(maxTime)) {\r\n\t\t\t\t\tconst linkedTail = tails.find(tail => tail.id === flight.tailId)\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst airportFrom = linkedOrder ? linkedOrder.fromId : flight.fromId\r\n\r\n\t\t\t\t\treturn  (linkedTail && linkedTail.airportId !== airportFrom)\r\n\t\t\t\t}\r\n\t\t\t\treturn false\r\n\t\t\t})\r\n\r\n\t\t\tif (canceledFlights.length === 0) {\r\n\t\t\t\treturn state\r\n\t\t\t}\r\n\r\n\t\t\treturn { ...state, ...canceledFlights.reduce((result, flight) => {\r\n\t\t\t\tresult[flight.id] = { ...flight, status: flightStatuses.CANCELED}\r\n\t\t\t\treturn result\r\n\t\t\t}, {}) }\r\n\t\tdefault: return state;\r\n\t}\r\n}\r\n","import { pageActionTypes } from '../constants/action-types'\r\nimport moment from 'moment'\r\n\r\nconst startTime = moment.utc('2000-01-01T10:00:00+00:00')\r\n\r\nconst initialState = {\r\n    currentTime: startTime.clone(),\r\n    maxTime: startTime.clone(),\r\n}\r\n\r\nexport function timeReducer(state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case pageActionTypes.INC_TIME: \r\n            const newCurrentTime = state.currentTime.add(payload, 'hour').clone()\r\n            state = {\r\n                ...state,\r\n                currentTime: newCurrentTime,\r\n                maxTime: newCurrentTime.diff(state.maxTime) > 0 ? newCurrentTime.clone() : state.maxTime,\r\n            }\r\n            break;\r\n        case pageActionTypes.DEC_TIME: \r\n            state = {\r\n                ...state,\r\n                currentTime: state.currentTime.add(-1 * payload, 'hour').clone()\r\n            }\r\n            break;\r\n        case pageActionTypes.SET_START_TIME:\r\n            state = {\r\n                ...state,\r\n                currentTime: startTime.clone()\r\n            }\r\n            break\r\n        case pageActionTypes.SET_CURRENT_TIME:\r\n            return {\r\n                ...state,\r\n                currentTime: state.maxTime.clone()\r\n            }\r\n\r\n        default: break;    \r\n    }\r\n\r\n    return state\r\n}","import { pageActionTypes } from '../constants/action-types'\r\n\r\nconst initialState = {\r\n    airports: {\r\n        1: {\r\n            id: 1,\r\n            name: 'Хуари Бумедьен',\r\n            iata: 'ALG',\r\n            countriesId: 1,\r\n            latt: 36.69,\r\n            longt: 3.22,\r\n            costOnHour: 10,\r\n            regionId: 2,\r\n        },\r\n        2: {\r\n            id: 2,\r\n            name: 'Агра Херия',\r\n            iata: 'AGR',\r\n            countriesId: 2,\r\n            latt: 27.15,\r\n            longt: 77.96,\r\n            costOnHour: 20,\r\n            regionId: 1,\r\n        },\r\n        3: {\r\n            id: 3,\r\n            name: 'Кейптаун',\r\n            iata: 'CPT',\r\n            countriesId: 3,\r\n            latt: -33.96,\r\n            longt: 18.6,\r\n            costOnHour: 30,\r\n            regionId: 2,\r\n        },\r\n        4: {\r\n            id: 4,\r\n            name: 'Дахла',\r\n            iata: 'VIL',\r\n            countriesId: 4,\r\n            latt: 23.68,\r\n            longt: -15.95,\r\n            costOnHour: 20,\r\n            regionId: 2,\r\n        },\r\n        5: {\r\n            id: 5,\r\n            name: 'Бразилиа',\r\n            iata: 'BSB',\r\n            countriesId: 5,\r\n            latt: -15.86,\r\n            longt: -47.92,\r\n            costOnHour: 10,\r\n            regionId: 4,\r\n        },\r\n        6: {\r\n            id: 6,\r\n            name: 'Торонто Пирсон',\r\n            iata: 'YYZ',\r\n            countriesId: 6,\r\n            latt: 43.67,\r\n            longt: -79.63,\r\n            costOnHour: 20,\r\n            regionId: 3,\r\n        },\r\n        7: {\r\n            id: 7,\r\n            name: 'Кадьяк',\r\n            iata: 'ADQ',\r\n            countriesId: 7,\r\n            latt: 57.79,\r\n            longt: -152.40,\r\n            costOnHour: 30,\r\n            regionId: 3,\r\n        },\r\n        8: {\r\n            id: 8,\r\n            name: 'Новый',\r\n            iata: 'KHV',\r\n            countriesId: 8,\r\n            latt: 48.53,\r\n            longt: 135.19,\r\n            costOnHour: 10,\r\n            regionId: 1,\r\n        },\r\n        9: {\r\n            id: 9,\r\n            name: 'Перт',\r\n            iata: 'PER',\r\n            countriesId: 9,\r\n            latt: -31.94,\r\n            longt: 115.97,\r\n            costOnHour: 10,\r\n            regionId: 5,\r\n        },\r\n        10: {\r\n            id: 10,\r\n            name: 'Уфа',\r\n            iata: 'UFA',\r\n            countriesId: 8,\r\n            latt: 54.56,\r\n            longt: 55.87,\r\n            costOnHour: 20,\r\n            regionId: 1,\r\n        },\r\n        11: {\r\n            id: 11,\r\n            name: 'Арланда',\r\n            iata: 'ARN',\r\n            countriesId: 10,\r\n            latt: 59.65,\r\n            longt: 7.92,\r\n            costOnHour: 10,\r\n            regionId: 1,\r\n        },\r\n        12: {\r\n            id: 12,\r\n            name: 'Портела',\r\n            iata: 'LIS',\r\n            countriesId: 11,\r\n            latt: 38.77,\r\n            longt: -9.12,\r\n            costOnHour: 20,\r\n            regionId: 1,\r\n        },\r\n        13: {\r\n            id: 13,\r\n            name: 'Имам Хомейни',\r\n            iata: 'THR',\r\n            countriesId: 12,\r\n            latt: 35.40,\r\n            longt: 51.15,\r\n            costOnHour: 10,\r\n            regionId: 1,\r\n        },\r\n        14: {\r\n            id: 14,\r\n            name: 'София',\r\n            iata: 'SOF',\r\n            countriesId: 13,\r\n            latt: 42.68,\r\n            longt: 23.42,\r\n            costOnHour: 10,\r\n            regionId: 1,\r\n        },\r\n        15: {\r\n            id: 15,\r\n            name: 'Риян Мукалла',\r\n            iata: 'RIY',\r\n            countriesId: 14,\r\n            latt: 14.66,\r\n            longt: 49.37,\r\n            costOnHour: 40,\r\n            regionId: 1,\r\n        },\r\n        16: {\r\n            id: 16,\r\n            name: 'Кунсан',\r\n            iata: 'KUV',\r\n            countriesId: 15,\r\n            latt: 35.98,\r\n            longt: 126.75,\r\n            costOnHour: 10,\r\n            regionId: 1,\r\n        },\r\n        17: {\r\n            id: 17,\r\n            name: 'Кун',\r\n            iata: 'VCS',\r\n            countriesId: 16,\r\n            latt: 10.37,\r\n            longt: 106.63,\r\n            costOnHour: 10,\r\n            regionId: 1,\r\n        },\r\n        18: {\r\n            id: 18,\r\n            name: 'Порт-Судан',\r\n            iata: 'PZU',\r\n            countriesId: 17,\r\n            latt: 19.43,\r\n            longt: 37.23,\r\n            costOnHour: 20,\r\n            regionId: 2,\r\n        },\r\n        19: {\r\n            id: 19,\r\n            name: 'Киншаса Нджили',\r\n            iata: 'FIH',\r\n            countriesId: 18,\r\n            latt: -4.39,\r\n            longt: 15.44,\r\n            costOnHour: 10,\r\n            regionId: 2,\r\n        },\r\n        20: {\r\n            id: 20,\r\n            name: 'Абиджан Порт-Буэ',\r\n            iata: 'ABJ',\r\n            countriesId: 19,\r\n            latt: 5.26,\r\n            longt: -3.93,\r\n            costOnHour: 10,\r\n            regionId: 2,\r\n        },\r\n        // 21: {\r\n        //     id: 21,\r\n        //     name: 'Антананариву Ивато',\r\n        //     iata: 'TNR',\r\n        //     countriesId: 20,\r\n        //     latt: -18.8,\r\n        //     longt: 47.48,\r\n        //     costOnHour: 10,\r\n        //     regionId: 2,\r\n        // },\r\n        // 22: {\r\n        //     id: 22,\r\n        //     name: 'Александрия Эль-Нужа',\r\n        //     iata: 'ALY',\r\n        //     countriesId: 21,\r\n        //     latt: 31.18,\r\n        //     longt: 29.95,\r\n        //     costOnHour: 10,\r\n        //     regionId: 2,\r\n        // },\r\n        // 23: {\r\n        //     id: 23,\r\n        //     name: 'Виланкулос',\r\n        //     iata: 'VNX',\r\n        //     countriesId: 22,\r\n        //     latt: -22.02,\r\n        //     longt: 35.31,\r\n        //     costOnHour: 20,\r\n        //     regionId: 2,\r\n        // },\r\n        24: {\r\n            id: 24,\r\n            name: 'Сингапур Чанги',\r\n            iata: 'SIN',\r\n            countriesId: 23,\r\n            latt: 1.35,\r\n            longt: 103.99,\r\n            costOnHour: 30,\r\n            regionId: 5,\r\n        },\r\n\r\n\r\n        25: {\r\n            id: 25,\r\n            name: 'Джаяпура Сентани',\r\n            iata: 'DJJ',\r\n            countriesId: 24,\r\n            latt: -2.58,\r\n            longt: 140.52,\r\n            costOnHour: 20,\r\n            regionId: 5,\r\n        },\r\n\r\n        // 26: {\r\n        //     id: 26,\r\n        //     name: 'Кэрнс',\r\n        //     iata: 'CNS',\r\n        //     countriesId: 9,\r\n        //     latt: -16.89,\r\n        //     longt: 145.76,\r\n        //     costOnHour: 10,\r\n        //     regionId: 5,\r\n        // },\r\n\r\n        // 27: {\r\n        //     id: 27,\r\n        //     name: 'Хобарт',\r\n        //     iata: 'HBA',\r\n        //     countriesId: 9,\r\n        //     latt: -42.84,\r\n        //     longt: 147.51,\r\n        //     costOnHour: 20,\r\n        //     regionId: 5,\r\n        // },\r\n\r\n        // 28: {\r\n        //     id: 28,\r\n        //     name: 'Ванака',\r\n        //     iata: 'WKA',\r\n        //     countriesId: 9,\r\n        //     latt: -44.72,\r\n        //     longt: 169.25,\r\n        //     costOnHour: 10,\r\n        //     regionId: 5,\r\n        // },\r\n\r\n        // 29: {\r\n        //     id: 29,\r\n        //     name: 'Франциско Бангой',\r\n        //     iata: 'DVO',\r\n        //     countriesId: 25,\r\n        //     latt: 7.13,\r\n        //     longt: 125.65,\r\n        //     costOnHour: 20,\r\n        //     regionId: 5,\r\n        // },\r\n\r\n        30: {\r\n            id: 30,\r\n            name: 'Бенито Хуарес',\r\n            iata: 'MEX',\r\n            countriesId: 26,\r\n            latt: 19.44,\r\n            longt: -99.07,\r\n            costOnHour: 20,\r\n            regionId: 3,\r\n        },\r\n\r\n        31: {\r\n            id: 31,\r\n            name: 'Сан-Франциско',\r\n            iata: 'SFO',\r\n            countriesId: 7,\r\n            latt: 37.62,\r\n            longt: -122.37,\r\n            costOnHour: 20,\r\n            regionId: 3,\r\n        },\r\n       \r\n        // 32: {\r\n        //     id: 32,\r\n        //     name: ' Харбор Уотер',\r\n        //     iata: 'CXH',\r\n        //     countriesId: 7,\r\n        //     latt: 49.29,\r\n        //     longt: -123.12,\r\n        //     costOnHour: 20,\r\n        //     regionId: 3,\r\n        // },\r\n        // 33: {\r\n        //     id: 33,\r\n        //     name: 'Денвер',\r\n        //     iata: 'DEN',\r\n        //     countriesId: 7,\r\n        //     latt: 39.86,\r\n        //     longt: -104.67,\r\n        //     costOnHour: 20,\r\n        //     regionId: 3,\r\n        // },\r\n        // 34: {\r\n        //     id: 34,\r\n        //     name: 'Луи Армстронг',\r\n        //     iata: 'MSY',\r\n        //     countriesId: 7,\r\n        //     latt: 29.99,\r\n        //     longt: -90.26,\r\n        //     costOnHour: 20,\r\n        //     regionId: 3,\r\n        // },\r\n        // 35: {\r\n        //     id: 35,\r\n        //     name: 'Форт-Лодердейл Голливуд',\r\n        //     iata: 'FLL',\r\n        //     countriesId: 7,\r\n        //     latt: 26.07,\r\n        //     longt: -80.15,\r\n        //     costOnHour: 30,\r\n        //     regionId: 3,\r\n        // },\r\n        // 36: {\r\n        //     id: 36,\r\n        //     name: 'Нук',\r\n        //     iata: 'GOH',\r\n        //     countriesId: 27,\r\n        //     latt: 64.19,\r\n        //     longt: -51.68,\r\n        //     costOnHour: 10,\r\n        //     regionId: 3,\r\n        // },\r\n        // 37: {\r\n        //     id: 37,\r\n        //     name: 'Ранкин-Инлет',\r\n        //     iata: 'YRT',\r\n        //     countriesId: 6,\r\n        //     latt: 62.81,\r\n        //     longt: -92.12,\r\n        //     costOnHour: 10,\r\n        //     regionId: 3,\r\n        // },\r\n        // 38: {\r\n        //     id: 38,\r\n        //     name: 'Пунта-Аренас',\r\n        //     iata: 'PUQ',\r\n        //     countriesId: 28,\r\n        //     latt: -53,\r\n        //     longt: -70.85,\r\n        //     costOnHour: 10,\r\n        //     regionId: 4,\r\n        // },\r\n        39: {\r\n            id: 39,\r\n            name: 'Сеймур',\r\n            iata: 'GPS',\r\n            countriesId: 29,\r\n            latt: -0.45,\r\n            longt: -90.27,\r\n            costOnHour: 40,\r\n            regionId: 4,\r\n        },\r\n        40: {\r\n            id: 40,\r\n            name: 'Виру Виру',\r\n            iata: 'VVI',\r\n            countriesId: 30,\r\n            latt: -17.64,\r\n            longt: -63.14,\r\n            costOnHour: 10,\r\n            regionId: 4,\r\n        },\r\n        41: {\r\n            id: 41,\r\n            name: 'Уилсон Фонсека',\r\n            iata: 'STM',\r\n            countriesId: 5,\r\n            latt: -2.42,\r\n            longt: -54.79,\r\n            costOnHour: 20,\r\n            regionId: 4,\r\n        },\r\n        // 42: {\r\n        //     id: 42,\r\n        //     name: 'Боа-Виста',\r\n        //     iata: 'BVB',\r\n        //     countriesId: 5,\r\n        //     latt: 2.85,\r\n        //     longt: -60.69,\r\n        //     costOnHour: 20,\r\n        //     regionId: 4,\r\n        // },\r\n        // 43: {\r\n        //     id: 43,\r\n        //     name: 'Маркос Гелаберт',\r\n        //     iata: 'PAC',\r\n        //     countriesId: 31,\r\n        //     latt: 8.97,\r\n        //     longt: -79.56,\r\n        //     costOnHour: 20,\r\n        //     regionId: 4,\r\n        // },\r\n        44: {\r\n            id: 44,\r\n            name: 'Тениенте Родолфо Мфрша Мартина',\r\n            iata: 'TNM',\r\n            countriesId: 32,\r\n            latt: -62.19,\r\n            longt: -58.98,\r\n            costOnHour: 100,\r\n            regionId: 6,\r\n        },\r\n        45: {\r\n            id: 45,\r\n            name: 'Пегасус Филд',\r\n            iata: 'NZPG',\r\n            countriesId: 32,\r\n            latt: -77.57,\r\n            longt: -166.31,\r\n            costOnHour: 100,\r\n            regionId: 6,\r\n        },\r\n        46 : {\r\n            id: 46,\r\n            name: 'Дейвис ',\r\n            iata: 'NZD',\r\n            countriesId: 32,\r\n            latt: -68.35,\r\n            longt: 77.58,\r\n            costOnHour: 100,\r\n            regionId: 6,\r\n        },       \r\n    },\r\n    regions: {\r\n        1: {\r\n            id: 1,\r\n            name: 'Eurasia'\r\n        },\r\n        2: {\r\n            id: 2,\r\n            name: 'Africa'\r\n        },\r\n        3: {\r\n            id: 3,\r\n            name: 'North America'\r\n        },\r\n        4: {\r\n            id: 4,\r\n            name: 'South America'\r\n        },\r\n        5: {\r\n            id: 5,\r\n            name: 'Australia and Oceania'\r\n        },\r\n        6: {\r\n            id: 6,\r\n            name: 'Antarсtica'\r\n        }\r\n    },\r\n    countries: {\r\n        1: {\r\n            name: 'Алжир'\r\n        },\r\n        2: {\r\n            name: 'Индия'\r\n        },\r\n        3: {\r\n            name: 'ЮАР'\r\n        },\r\n        4: {\r\n            name: 'Западная Сахара'\r\n        },\r\n        5: {\r\n            name: 'Бразилия'\r\n        },\r\n        6: {\r\n            name: 'Канада'   \r\n        },\r\n        7: {\r\n            name: 'США'   \r\n        },\r\n        8: {\r\n            name: 'Россия'   \r\n        },\r\n        9: {\r\n            name: 'Австралия'   \r\n        },\r\n        10: {\r\n            name: 'Швеция'\r\n        },\r\n        11: {\r\n            name: 'Португалия'\r\n        },\r\n        12: {\r\n            name: 'Иран'\r\n        },\r\n        13: {\r\n            name: 'Болгария'\r\n        },\r\n        14: {\r\n            name: 'Йемен'\r\n        },\r\n        15: {\r\n            name: 'Южная Корея'\r\n        },\r\n        16: {\r\n            name: 'Вьетнам'\r\n        },\r\n        17: {\r\n            name: 'Судан'\r\n        },\r\n        18: {\r\n            name: 'Демократическая Республика Конго'\r\n        },\r\n        19: {\r\n            name: 'Кот д\\'Ивуар'\r\n        },\r\n        20: {\r\n            name: 'Мадагаскар'\r\n        },\r\n        21: {\r\n            name: 'Египет'\r\n        },\r\n        22: {\r\n            name: 'Мозамбик'\r\n        },\r\n        23: {\r\n            name: 'Сингапур'\r\n        },\r\n        24: {\r\n            name: 'Индонезия'\r\n        },\r\n        25: {\r\n            name: 'Филиппины'\r\n        },\r\n        26: {\r\n            name: 'Мексика'\r\n        },\r\n        27: {\r\n            name: 'Гренландия'\r\n        },\r\n        28: {\r\n            name: 'Чили'\r\n        },\r\n        29: {\r\n            name: 'Эквадор'\r\n        },\r\n        30: {\r\n            name: 'Боливия'\r\n        },\r\n        31: {\r\n            name: 'Панама'\r\n        },\r\n        32: {\r\n            name: 'Антарктида'\r\n        }\r\n    },\r\n    licences: {\r\n        1: {\r\n            id: 1,\r\n            regionIds: [1],\r\n            name: 'Аэропорты Евразии',\r\n            imageKey: 'eurasia',\r\n            cost: 10000,\r\n        },\r\n        2: {\r\n            id: 2,\r\n            regionIds: [2],\r\n            name: 'Аэропорты Африки',\r\n            imageKey: 'africa',\r\n            cost: 10000,\r\n        },\r\n        3: {\r\n            id: 3,\r\n            regionIds: [3],\r\n            name: 'Аэропорты Северной Америки',\r\n            imageKey: 'northAmerica',\r\n            cost: 10000,\r\n        },\r\n        4: {\r\n            id: 4,\r\n            regionIds: [4],\r\n            name: 'Аэропорты Южной Америки',\r\n            imageKey: 'southAmerica',\r\n            cost: 10000,\r\n        },\r\n        5: {\r\n            id: 5,\r\n            regionIds: [5],\r\n            name: 'Аэропорты Австралии и Океании',\r\n            imageKey: 'australia',\r\n            cost: 10000,\r\n        },\r\n        6: {\r\n            id: 6,\r\n            regionIds: [6],\r\n            name: 'Аэродромы Антарктиды',\r\n            imageKey: 'antarctida',\r\n            cost: 10000,\r\n        },\r\n        \r\n    },\r\n    currentLicenceIds: [1]\r\n}\r\n\r\nexport function geographyReducer(state = initialState, action) {\r\n    const { type, payload = {} } = action\r\n    const { licence } = payload\r\n    switch (type) {\r\n        case pageActionTypes.ADD_LICENCE:\r\n            return {...state, currentLicenceIds: [...state.currentLicenceIds, licence.id]}\r\n        default: return state\r\n    }    \r\n}","import { pageActionTypes } from '../constants/action-types'\r\nimport { flightStatuses } from '../constants/flight-status'\r\n\r\nconst initialState = {\r\n    currentBudget: 1000,\r\n    budgetChains: []\r\n}\r\n\r\nexport function moneyReducer(state = initialState, action) {\r\n    const { type, payload = {} } = action\r\n    const { flights, flight, flightId, maxTime, currentTime, tails } = payload\r\n    const budgetChains = [...state.budgetChains]\r\n\r\n    switch (type) {  \r\n        case pageActionTypes.CHECK_MONEY:\r\n            if (maxTime.isSame(currentTime)) {\r\n                let budget = state.currentBudget\r\n                flights.forEach(flight => {\r\n                    if (flight.status !== flightStatuses.CANCELED && \r\n                        flight.dateLanding && \r\n                        flight.dateLanding.isSame(currentTime)) {                        \r\n                        budget = budget + flight.pay - flight.cost\r\n                    }\r\n                })\r\n                \r\n                tails.forEach(tail => {\r\n                    if (tail.airport) {\r\n                        budget = budget - tail.airport.costOnHour\r\n                    }\r\n                })\r\n                return {...state, currentBudget: budget }\r\n            }\r\n            return state  \r\n        case pageActionTypes.ADD_APPROACH_FLIGHT:\r\n            if (flight.fromId !== flight.toId) {\r\n                const linkedChainIndex = budgetChains.findIndex(chain => {\r\n                    return chain.ids.includes(flight.linkedFlightId)\r\n                    })\r\n\r\n                if (linkedChainIndex === -1) {\r\n                    const maxId = budgetChains.length > 0 ? budgetChains.map(chain => chain.id).sort((a, b) => a < b)[0] : -1\r\n\r\n                    return { ...state, budgetChains: \r\n                        [ ...budgetChains, {\r\n                            id: maxId + 1,\r\n                            ids: [ flight.id, flight.linkedFlightId ],\r\n                            tailId: flight.tailId,\r\n                        }]}\r\n                } \r\n                \r\n                return { ...state, budgetChains: budgetChains.map(chain => {\r\n                    if (chain.id === linkedChainIndex) {\r\n                        return { \r\n                            ids: [ ...chain.ids, flight.id ], \r\n                            saldo: budgetChains[linkedChainIndex] - flight.cost\r\n                        }\r\n                    }\r\n                    return chain\r\n                })}  \r\n            }\r\n            return state\r\n        case pageActionTypes.REMOVE_FLIGHT:\r\n                return {\r\n                    ...state,\r\n                    budgetChains: budgetChains.map(chain => {\r\n                        if (chain.ids.includes(flightId)) {\r\n                            chain.ids.splice(chain.ids.indexOf(flightId), 1)\r\n                        }\r\n                        return chain\r\n                    }).filter(chain => chain.ids.length > 1)              \r\n                }  \r\n        case pageActionTypes.ADD_LICENCE:\r\n            const { licence } = payload\r\n            return { ...state, currentBudget: state.currentBudget - licence.cost }\r\n        case pageActionTypes.ADD_TAIL: \r\n            const { cost } = payload\r\n            return { ...state,  currentBudget: state.currentBudget - cost }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}","import { pageActionTypes } from '../constants/action-types'\r\n\r\nconst initialState = {\r\n    all: [\r\n        {\r\n            id: 0,\r\n            title: 'Магелан за штурвалом',\r\n            imageKey: 'achievementMagelan',\r\n            description: 'Пройти все круги бюрократического ада и получи лицензии для пролета по всему миру',\r\n            congratulation: `И... последняя печать. Твои борта кочуют по свету как беззаботные птицы, \r\n                а конкуренты кусают локти в очередях перед кабинетами чиновников. \r\n                Поздравляем! Мир теперь твой!`,\r\n        },\r\n        {\r\n            id: 1,\r\n            title: 'АвиаКрез',\r\n            imageKey: 'achievementAviaCroesus',\r\n            description: 'Бюджет компании перевалил за 1000 ☼',\r\n            congratulation: `Все, к чему ты прикасаешься, обращается в золото,\r\n                заказчики при виде тебя бросают в воздух монетки, \r\n                обшивка твоих бортов стала подозрительно блестеть. \r\n                Поздравляем! Девочки на Мальдивах поднимают в твою честь бокалы!`,\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Наш герой!',\r\n            imageKey: 'achievementOurHero',\r\n            description: 'Выполнить 5 заказов на доставку чулок',\r\n            congratulation: `Каждая ножка укутана в шелк, жажда прекрасного \r\n                утолена и красота, наконец спасла мир. И все благодаря тебе! Виват!`\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Великий арматор',\r\n            imageKey: 'achievementGreatArmator',\r\n            description: 'Собрать флот из 10 бортов',\r\n            congratulation: `Закрывая глаза перед сном авиадиспетчеры видят ливреи твоих бортов.\r\n                Дети, подняв голову вверх на рев мотора безошибочно называют твою компанию.\r\n                Поистине, твоя армада владеет небесами! `,\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'Охотник до ачивок',\r\n            imageKey: 'achievement_achievment_hunter',\r\n            description: 'Получить все ачивки',\r\n            congratulation: `Когда фортуне хочется кого-нибудь одарить, \r\n                в первую очередь она вспоминает о тебе.\r\n                Как еще объяснить, что ты собрал все ачивки? Это победа, брат!`\r\n        },\r\n    ],\r\n    currentAchievemntIds: [],\r\n}\r\n\r\nexport function achievementsReducer(state = initialState, action) {\r\n    const { type, payload = {} } = action\r\n    switch (type) {\r\n        case pageActionTypes.ADD_ACHIEVEMENT:\r\n            const { achievementId } = payload\r\n            if (!state.currentAchievemntIds.includes(achievementId))\r\n            return (state.currentAchievemntIds.includes(achievementId)) ? state : \r\n                { ...state, currentAchievemntIds: [...state.currentAchievemntIds, achievementId] }\r\n            break\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { ordersReducer } from './orders'\r\nimport { tailsReducer } from './tailes'\r\nimport { flightsReducer } from './flights'\r\nimport { timeReducer } from './time'\r\nimport { geographyReducer } from './geography'\r\nimport { moneyReducer } from './money'\r\nimport { achievementsReducer } from './achievements'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    orders: ordersReducer,\r\n    tails: tailsReducer,\r\n    flights: flightsReducer,\r\n    time: timeReducer,\r\n    geography: geographyReducer,\r\n    money: moneyReducer,\r\n    achievements: achievementsReducer,\r\n});","import { createStore } from 'redux';\r\nimport { rootReducer } from '../reducers'\r\n\r\nexport const store = createStore(rootReducer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/achievement_Magelan.93ced87a.svg\";","module.exports = __webpack_public_path__ + \"static/media/achievement_avia_Croesus.1466a797.svg\";","module.exports = __webpack_public_path__ + \"static/media/achievement_our_hero.3d9a7363.svg\";","module.exports = __webpack_public_path__ + \"static/media/achievement_great_armator.74bf1047.svg\";","module.exports = __webpack_public_path__ + \"static/media/achievement_achievment_hunter.f0ffb6aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/aircraft-icon__gray.e8c5ef48.svg\";"],"sourceRoot":""}